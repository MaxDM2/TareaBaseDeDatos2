
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Correo
 * 
 */
export type Correo = $Result.DefaultSelection<Prisma.$CorreoPayload>
/**
 * Model Direccion_Favorita
 * 
 */
export type Direccion_Favorita = $Result.DefaultSelection<Prisma.$Direccion_FavoritaPayload>
/**
 * Model Contacto
 * 
 */
export type Contacto = $Result.DefaultSelection<Prisma.$ContactoPayload>
/**
 * Model Correo_Bloqueado
 * 
 */
export type Correo_Bloqueado = $Result.DefaultSelection<Prisma.$Correo_BloqueadoPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs>;

  /**
   * `prisma.correo`: Exposes CRUD operations for the **Correo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Correos
    * const correos = await prisma.correo.findMany()
    * ```
    */
  get correo(): Prisma.CorreoDelegate<ExtArgs>;

  /**
   * `prisma.direccion_Favorita`: Exposes CRUD operations for the **Direccion_Favorita** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Direccion_Favoritas
    * const direccion_Favoritas = await prisma.direccion_Favorita.findMany()
    * ```
    */
  get direccion_Favorita(): Prisma.Direccion_FavoritaDelegate<ExtArgs>;

  /**
   * `prisma.contacto`: Exposes CRUD operations for the **Contacto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contactos
    * const contactos = await prisma.contacto.findMany()
    * ```
    */
  get contacto(): Prisma.ContactoDelegate<ExtArgs>;

  /**
   * `prisma.correo_Bloqueado`: Exposes CRUD operations for the **Correo_Bloqueado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Correo_Bloqueados
    * const correo_Bloqueados = await prisma.correo_Bloqueado.findMany()
    * ```
    */
  get correo_Bloqueado(): Prisma.Correo_BloqueadoDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.15.1
   * Query Engine version: 5675a3182f972f1a8f31d16eee6abf4fd54910e3
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Correo: 'Correo',
    Direccion_Favorita: 'Direccion_Favorita',
    Contacto: 'Contacto',
    Correo_Bloqueado: 'Correo_Bloqueado'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'usuario' | 'correo' | 'direccion_Favorita' | 'contacto' | 'correo_Bloqueado'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>,
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Correo: {
        payload: Prisma.$CorreoPayload<ExtArgs>
        fields: Prisma.CorreoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CorreoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CorreoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>
          }
          findFirst: {
            args: Prisma.CorreoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CorreoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>
          }
          findMany: {
            args: Prisma.CorreoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>[]
          }
          create: {
            args: Prisma.CorreoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>
          }
          createMany: {
            args: Prisma.CorreoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CorreoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>[]
          }
          delete: {
            args: Prisma.CorreoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>
          }
          update: {
            args: Prisma.CorreoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>
          }
          deleteMany: {
            args: Prisma.CorreoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CorreoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CorreoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreoPayload>
          }
          aggregate: {
            args: Prisma.CorreoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCorreo>
          }
          groupBy: {
            args: Prisma.CorreoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CorreoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CorreoCountArgs<ExtArgs>,
            result: $Utils.Optional<CorreoCountAggregateOutputType> | number
          }
        }
      }
      Direccion_Favorita: {
        payload: Prisma.$Direccion_FavoritaPayload<ExtArgs>
        fields: Prisma.Direccion_FavoritaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Direccion_FavoritaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Direccion_FavoritaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Direccion_FavoritaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Direccion_FavoritaPayload>
          }
          findFirst: {
            args: Prisma.Direccion_FavoritaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Direccion_FavoritaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Direccion_FavoritaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Direccion_FavoritaPayload>
          }
          findMany: {
            args: Prisma.Direccion_FavoritaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Direccion_FavoritaPayload>[]
          }
          create: {
            args: Prisma.Direccion_FavoritaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Direccion_FavoritaPayload>
          }
          createMany: {
            args: Prisma.Direccion_FavoritaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Direccion_FavoritaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Direccion_FavoritaPayload>[]
          }
          delete: {
            args: Prisma.Direccion_FavoritaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Direccion_FavoritaPayload>
          }
          update: {
            args: Prisma.Direccion_FavoritaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Direccion_FavoritaPayload>
          }
          deleteMany: {
            args: Prisma.Direccion_FavoritaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.Direccion_FavoritaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.Direccion_FavoritaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Direccion_FavoritaPayload>
          }
          aggregate: {
            args: Prisma.Direccion_FavoritaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDireccion_Favorita>
          }
          groupBy: {
            args: Prisma.Direccion_FavoritaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Direccion_FavoritaGroupByOutputType>[]
          }
          count: {
            args: Prisma.Direccion_FavoritaCountArgs<ExtArgs>,
            result: $Utils.Optional<Direccion_FavoritaCountAggregateOutputType> | number
          }
        }
      }
      Contacto: {
        payload: Prisma.$ContactoPayload<ExtArgs>
        fields: Prisma.ContactoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ContactoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ContactoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ContactoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ContactoPayload>
          }
          findFirst: {
            args: Prisma.ContactoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ContactoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ContactoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ContactoPayload>
          }
          findMany: {
            args: Prisma.ContactoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ContactoPayload>[]
          }
          create: {
            args: Prisma.ContactoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ContactoPayload>
          }
          createMany: {
            args: Prisma.ContactoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ContactoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ContactoPayload>[]
          }
          delete: {
            args: Prisma.ContactoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ContactoPayload>
          }
          update: {
            args: Prisma.ContactoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ContactoPayload>
          }
          deleteMany: {
            args: Prisma.ContactoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ContactoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ContactoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ContactoPayload>
          }
          aggregate: {
            args: Prisma.ContactoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateContacto>
          }
          groupBy: {
            args: Prisma.ContactoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ContactoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ContactoCountArgs<ExtArgs>,
            result: $Utils.Optional<ContactoCountAggregateOutputType> | number
          }
        }
      }
      Correo_Bloqueado: {
        payload: Prisma.$Correo_BloqueadoPayload<ExtArgs>
        fields: Prisma.Correo_BloqueadoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Correo_BloqueadoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Correo_BloqueadoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Correo_BloqueadoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Correo_BloqueadoPayload>
          }
          findFirst: {
            args: Prisma.Correo_BloqueadoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Correo_BloqueadoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Correo_BloqueadoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Correo_BloqueadoPayload>
          }
          findMany: {
            args: Prisma.Correo_BloqueadoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Correo_BloqueadoPayload>[]
          }
          create: {
            args: Prisma.Correo_BloqueadoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Correo_BloqueadoPayload>
          }
          createMany: {
            args: Prisma.Correo_BloqueadoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Correo_BloqueadoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Correo_BloqueadoPayload>[]
          }
          delete: {
            args: Prisma.Correo_BloqueadoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Correo_BloqueadoPayload>
          }
          update: {
            args: Prisma.Correo_BloqueadoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Correo_BloqueadoPayload>
          }
          deleteMany: {
            args: Prisma.Correo_BloqueadoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.Correo_BloqueadoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.Correo_BloqueadoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Correo_BloqueadoPayload>
          }
          aggregate: {
            args: Prisma.Correo_BloqueadoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCorreo_Bloqueado>
          }
          groupBy: {
            args: Prisma.Correo_BloqueadoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Correo_BloqueadoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Correo_BloqueadoCountArgs<ExtArgs>,
            result: $Utils.Optional<Correo_BloqueadoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    correos_enviados: number
    correos_recibidos: number
    direcciones_favoritas: number
    correos_bloqueados: number
    contactos: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    correos_enviados?: boolean | UsuarioCountOutputTypeCountCorreos_enviadosArgs
    correos_recibidos?: boolean | UsuarioCountOutputTypeCountCorreos_recibidosArgs
    direcciones_favoritas?: boolean | UsuarioCountOutputTypeCountDirecciones_favoritasArgs
    correos_bloqueados?: boolean | UsuarioCountOutputTypeCountCorreos_bloqueadosArgs
    contactos?: boolean | UsuarioCountOutputTypeCountContactosArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCorreos_enviadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CorreoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCorreos_recibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CorreoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountDirecciones_favoritasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Direccion_FavoritaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCorreos_bloqueadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Correo_BloqueadoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountContactosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id_usuario: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id_usuario: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id_usuario: number | null
    direccion_correo: string | null
    descripcion: string | null
    nombre: string | null
    clave: string | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id_usuario: number | null
    direccion_correo: string | null
    descripcion: string | null
    nombre: string | null
    clave: string | null
  }

  export type UsuarioCountAggregateOutputType = {
    id_usuario: number
    direccion_correo: number
    descripcion: number
    nombre: number
    clave: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id_usuario?: true
  }

  export type UsuarioSumAggregateInputType = {
    id_usuario?: true
  }

  export type UsuarioMinAggregateInputType = {
    id_usuario?: true
    direccion_correo?: true
    descripcion?: true
    nombre?: true
    clave?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id_usuario?: true
    direccion_correo?: true
    descripcion?: true
    nombre?: true
    clave?: true
  }

  export type UsuarioCountAggregateInputType = {
    id_usuario?: true
    direccion_correo?: true
    descripcion?: true
    nombre?: true
    clave?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id_usuario: number
    direccion_correo: string
    descripcion: string | null
    nombre: string | null
    clave: string | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    direccion_correo?: boolean
    descripcion?: boolean
    nombre?: boolean
    clave?: boolean
    correos_enviados?: boolean | Usuario$correos_enviadosArgs<ExtArgs>
    correos_recibidos?: boolean | Usuario$correos_recibidosArgs<ExtArgs>
    direcciones_favoritas?: boolean | Usuario$direcciones_favoritasArgs<ExtArgs>
    correos_bloqueados?: boolean | Usuario$correos_bloqueadosArgs<ExtArgs>
    contactos?: boolean | Usuario$contactosArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    direccion_correo?: boolean
    descripcion?: boolean
    nombre?: boolean
    clave?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id_usuario?: boolean
    direccion_correo?: boolean
    descripcion?: boolean
    nombre?: boolean
    clave?: boolean
  }

  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    correos_enviados?: boolean | Usuario$correos_enviadosArgs<ExtArgs>
    correos_recibidos?: boolean | Usuario$correos_recibidosArgs<ExtArgs>
    direcciones_favoritas?: boolean | Usuario$direcciones_favoritasArgs<ExtArgs>
    correos_bloqueados?: boolean | Usuario$correos_bloqueadosArgs<ExtArgs>
    contactos?: boolean | Usuario$contactosArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      correos_enviados: Prisma.$CorreoPayload<ExtArgs>[]
      correos_recibidos: Prisma.$CorreoPayload<ExtArgs>[]
      direcciones_favoritas: Prisma.$Direccion_FavoritaPayload<ExtArgs>[]
      correos_bloqueados: Prisma.$Correo_BloqueadoPayload<ExtArgs>[]
      contactos: Prisma.$ContactoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: number
      direccion_correo: string
      descripcion: string | null
      nombre: string | null
      clave: string | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UsuarioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UsuarioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.findMany({ select: { id_usuario: true } })
     * 
    **/
    findMany<T extends UsuarioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
    **/
    create<T extends UsuarioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends UsuarioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.createManyAndReturn({ 
     *   select: { id_usuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
    **/
    delete<T extends UsuarioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UsuarioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UsuarioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UsuarioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
    **/
    upsert<T extends UsuarioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    correos_enviados<T extends Usuario$correos_enviadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$correos_enviadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findMany'> | Null>;

    correos_recibidos<T extends Usuario$correos_recibidosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$correos_recibidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findMany'> | Null>;

    direcciones_favoritas<T extends Usuario$direcciones_favoritasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$direcciones_favoritasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Direccion_FavoritaPayload<ExtArgs>, T, 'findMany'> | Null>;

    correos_bloqueados<T extends Usuario$correos_bloqueadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$correos_bloqueadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Correo_BloqueadoPayload<ExtArgs>, T, 'findMany'> | Null>;

    contactos<T extends Usuario$contactosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$contactosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactoPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Usuario model
   */ 
  interface UsuarioFieldRefs {
    readonly id_usuario: FieldRef<"Usuario", 'Int'>
    readonly direccion_correo: FieldRef<"Usuario", 'String'>
    readonly descripcion: FieldRef<"Usuario", 'String'>
    readonly nombre: FieldRef<"Usuario", 'String'>
    readonly clave: FieldRef<"Usuario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario.correos_enviados
   */
  export type Usuario$correos_enviadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    where?: CorreoWhereInput
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    cursor?: CorreoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CorreoScalarFieldEnum | CorreoScalarFieldEnum[]
  }

  /**
   * Usuario.correos_recibidos
   */
  export type Usuario$correos_recibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    where?: CorreoWhereInput
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    cursor?: CorreoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CorreoScalarFieldEnum | CorreoScalarFieldEnum[]
  }

  /**
   * Usuario.direcciones_favoritas
   */
  export type Usuario$direcciones_favoritasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion_Favorita
     */
    select?: Direccion_FavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Direccion_FavoritaInclude<ExtArgs> | null
    where?: Direccion_FavoritaWhereInput
    orderBy?: Direccion_FavoritaOrderByWithRelationInput | Direccion_FavoritaOrderByWithRelationInput[]
    cursor?: Direccion_FavoritaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Direccion_FavoritaScalarFieldEnum | Direccion_FavoritaScalarFieldEnum[]
  }

  /**
   * Usuario.correos_bloqueados
   */
  export type Usuario$correos_bloqueadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo_Bloqueado
     */
    select?: Correo_BloqueadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Correo_BloqueadoInclude<ExtArgs> | null
    where?: Correo_BloqueadoWhereInput
    orderBy?: Correo_BloqueadoOrderByWithRelationInput | Correo_BloqueadoOrderByWithRelationInput[]
    cursor?: Correo_BloqueadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Correo_BloqueadoScalarFieldEnum | Correo_BloqueadoScalarFieldEnum[]
  }

  /**
   * Usuario.contactos
   */
  export type Usuario$contactosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contacto
     */
    select?: ContactoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactoInclude<ExtArgs> | null
    where?: ContactoWhereInput
    orderBy?: ContactoOrderByWithRelationInput | ContactoOrderByWithRelationInput[]
    cursor?: ContactoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactoScalarFieldEnum | ContactoScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Correo
   */

  export type AggregateCorreo = {
    _count: CorreoCountAggregateOutputType | null
    _avg: CorreoAvgAggregateOutputType | null
    _sum: CorreoSumAggregateOutputType | null
    _min: CorreoMinAggregateOutputType | null
    _max: CorreoMaxAggregateOutputType | null
  }

  export type CorreoAvgAggregateOutputType = {
    correo_id: number | null
    remitente_id: number | null
    destinatario_id: number | null
  }

  export type CorreoSumAggregateOutputType = {
    correo_id: number | null
    remitente_id: number | null
    destinatario_id: number | null
  }

  export type CorreoMinAggregateOutputType = {
    correo_id: number | null
    remitente_id: number | null
    destinatario_id: number | null
    asunto: string | null
    cuerpo: string | null
    es_favorito: boolean | null
  }

  export type CorreoMaxAggregateOutputType = {
    correo_id: number | null
    remitente_id: number | null
    destinatario_id: number | null
    asunto: string | null
    cuerpo: string | null
    es_favorito: boolean | null
  }

  export type CorreoCountAggregateOutputType = {
    correo_id: number
    remitente_id: number
    destinatario_id: number
    asunto: number
    cuerpo: number
    es_favorito: number
    _all: number
  }


  export type CorreoAvgAggregateInputType = {
    correo_id?: true
    remitente_id?: true
    destinatario_id?: true
  }

  export type CorreoSumAggregateInputType = {
    correo_id?: true
    remitente_id?: true
    destinatario_id?: true
  }

  export type CorreoMinAggregateInputType = {
    correo_id?: true
    remitente_id?: true
    destinatario_id?: true
    asunto?: true
    cuerpo?: true
    es_favorito?: true
  }

  export type CorreoMaxAggregateInputType = {
    correo_id?: true
    remitente_id?: true
    destinatario_id?: true
    asunto?: true
    cuerpo?: true
    es_favorito?: true
  }

  export type CorreoCountAggregateInputType = {
    correo_id?: true
    remitente_id?: true
    destinatario_id?: true
    asunto?: true
    cuerpo?: true
    es_favorito?: true
    _all?: true
  }

  export type CorreoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Correo to aggregate.
     */
    where?: CorreoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correos to fetch.
     */
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CorreoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Correos
    **/
    _count?: true | CorreoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CorreoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CorreoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CorreoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CorreoMaxAggregateInputType
  }

  export type GetCorreoAggregateType<T extends CorreoAggregateArgs> = {
        [P in keyof T & keyof AggregateCorreo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCorreo[P]>
      : GetScalarType<T[P], AggregateCorreo[P]>
  }




  export type CorreoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CorreoWhereInput
    orderBy?: CorreoOrderByWithAggregationInput | CorreoOrderByWithAggregationInput[]
    by: CorreoScalarFieldEnum[] | CorreoScalarFieldEnum
    having?: CorreoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CorreoCountAggregateInputType | true
    _avg?: CorreoAvgAggregateInputType
    _sum?: CorreoSumAggregateInputType
    _min?: CorreoMinAggregateInputType
    _max?: CorreoMaxAggregateInputType
  }

  export type CorreoGroupByOutputType = {
    correo_id: number
    remitente_id: number
    destinatario_id: number
    asunto: string | null
    cuerpo: string | null
    es_favorito: boolean | null
    _count: CorreoCountAggregateOutputType | null
    _avg: CorreoAvgAggregateOutputType | null
    _sum: CorreoSumAggregateOutputType | null
    _min: CorreoMinAggregateOutputType | null
    _max: CorreoMaxAggregateOutputType | null
  }

  type GetCorreoGroupByPayload<T extends CorreoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CorreoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CorreoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CorreoGroupByOutputType[P]>
            : GetScalarType<T[P], CorreoGroupByOutputType[P]>
        }
      >
    >


  export type CorreoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    correo_id?: boolean
    remitente_id?: boolean
    destinatario_id?: boolean
    asunto?: boolean
    cuerpo?: boolean
    es_favorito?: boolean
    remitente?: boolean | UsuarioDefaultArgs<ExtArgs>
    destinatario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["correo"]>

  export type CorreoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    correo_id?: boolean
    remitente_id?: boolean
    destinatario_id?: boolean
    asunto?: boolean
    cuerpo?: boolean
    es_favorito?: boolean
    remitente?: boolean | UsuarioDefaultArgs<ExtArgs>
    destinatario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["correo"]>

  export type CorreoSelectScalar = {
    correo_id?: boolean
    remitente_id?: boolean
    destinatario_id?: boolean
    asunto?: boolean
    cuerpo?: boolean
    es_favorito?: boolean
  }

  export type CorreoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | UsuarioDefaultArgs<ExtArgs>
    destinatario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type CorreoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | UsuarioDefaultArgs<ExtArgs>
    destinatario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $CorreoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Correo"
    objects: {
      remitente: Prisma.$UsuarioPayload<ExtArgs>
      destinatario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      correo_id: number
      remitente_id: number
      destinatario_id: number
      asunto: string | null
      cuerpo: string | null
      es_favorito: boolean | null
    }, ExtArgs["result"]["correo"]>
    composites: {}
  }

  type CorreoGetPayload<S extends boolean | null | undefined | CorreoDefaultArgs> = $Result.GetResult<Prisma.$CorreoPayload, S>

  type CorreoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CorreoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CorreoCountAggregateInputType | true
    }

  export interface CorreoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Correo'], meta: { name: 'Correo' } }
    /**
     * Find zero or one Correo that matches the filter.
     * @param {CorreoFindUniqueArgs} args - Arguments to find a Correo
     * @example
     * // Get one Correo
     * const correo = await prisma.correo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CorreoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CorreoFindUniqueArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Correo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CorreoFindUniqueOrThrowArgs} args - Arguments to find a Correo
     * @example
     * // Get one Correo
     * const correo = await prisma.correo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CorreoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Correo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoFindFirstArgs} args - Arguments to find a Correo
     * @example
     * // Get one Correo
     * const correo = await prisma.correo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CorreoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoFindFirstArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Correo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoFindFirstOrThrowArgs} args - Arguments to find a Correo
     * @example
     * // Get one Correo
     * const correo = await prisma.correo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CorreoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Correos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Correos
     * const correos = await prisma.correo.findMany()
     * 
     * // Get first 10 Correos
     * const correos = await prisma.correo.findMany({ take: 10 })
     * 
     * // Only select the `correo_id`
     * const correoWithCorreo_idOnly = await prisma.correo.findMany({ select: { correo_id: true } })
     * 
    **/
    findMany<T extends CorreoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Correo.
     * @param {CorreoCreateArgs} args - Arguments to create a Correo.
     * @example
     * // Create one Correo
     * const Correo = await prisma.correo.create({
     *   data: {
     *     // ... data to create a Correo
     *   }
     * })
     * 
    **/
    create<T extends CorreoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CorreoCreateArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Correos.
     * @param {CorreoCreateManyArgs} args - Arguments to create many Correos.
     * @example
     * // Create many Correos
     * const correo = await prisma.correo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends CorreoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Correos and returns the data saved in the database.
     * @param {CorreoCreateManyAndReturnArgs} args - Arguments to create many Correos.
     * @example
     * // Create many Correos
     * const correo = await prisma.correo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Correos and only return the `correo_id`
     * const correoWithCorreo_idOnly = await prisma.correo.createManyAndReturn({ 
     *   select: { correo_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends CorreoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Correo.
     * @param {CorreoDeleteArgs} args - Arguments to delete one Correo.
     * @example
     * // Delete one Correo
     * const Correo = await prisma.correo.delete({
     *   where: {
     *     // ... filter to delete one Correo
     *   }
     * })
     * 
    **/
    delete<T extends CorreoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CorreoDeleteArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Correo.
     * @param {CorreoUpdateArgs} args - Arguments to update one Correo.
     * @example
     * // Update one Correo
     * const correo = await prisma.correo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CorreoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CorreoUpdateArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Correos.
     * @param {CorreoDeleteManyArgs} args - Arguments to filter Correos to delete.
     * @example
     * // Delete a few Correos
     * const { count } = await prisma.correo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CorreoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Correos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Correos
     * const correo = await prisma.correo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CorreoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CorreoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Correo.
     * @param {CorreoUpsertArgs} args - Arguments to update or create a Correo.
     * @example
     * // Update or create a Correo
     * const correo = await prisma.correo.upsert({
     *   create: {
     *     // ... data to create a Correo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Correo we want to update
     *   }
     * })
    **/
    upsert<T extends CorreoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CorreoUpsertArgs<ExtArgs>>
    ): Prisma__CorreoClient<$Result.GetResult<Prisma.$CorreoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Correos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoCountArgs} args - Arguments to filter Correos to count.
     * @example
     * // Count the number of Correos
     * const count = await prisma.correo.count({
     *   where: {
     *     // ... the filter for the Correos we want to count
     *   }
     * })
    **/
    count<T extends CorreoCountArgs>(
      args?: Subset<T, CorreoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CorreoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Correo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CorreoAggregateArgs>(args: Subset<T, CorreoAggregateArgs>): Prisma.PrismaPromise<GetCorreoAggregateType<T>>

    /**
     * Group by Correo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CorreoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CorreoGroupByArgs['orderBy'] }
        : { orderBy?: CorreoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CorreoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCorreoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Correo model
   */
  readonly fields: CorreoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Correo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CorreoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    remitente<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    destinatario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Correo model
   */ 
  interface CorreoFieldRefs {
    readonly correo_id: FieldRef<"Correo", 'Int'>
    readonly remitente_id: FieldRef<"Correo", 'Int'>
    readonly destinatario_id: FieldRef<"Correo", 'Int'>
    readonly asunto: FieldRef<"Correo", 'String'>
    readonly cuerpo: FieldRef<"Correo", 'String'>
    readonly es_favorito: FieldRef<"Correo", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Correo findUnique
   */
  export type CorreoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * Filter, which Correo to fetch.
     */
    where: CorreoWhereUniqueInput
  }

  /**
   * Correo findUniqueOrThrow
   */
  export type CorreoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * Filter, which Correo to fetch.
     */
    where: CorreoWhereUniqueInput
  }

  /**
   * Correo findFirst
   */
  export type CorreoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * Filter, which Correo to fetch.
     */
    where?: CorreoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correos to fetch.
     */
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Correos.
     */
    cursor?: CorreoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Correos.
     */
    distinct?: CorreoScalarFieldEnum | CorreoScalarFieldEnum[]
  }

  /**
   * Correo findFirstOrThrow
   */
  export type CorreoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * Filter, which Correo to fetch.
     */
    where?: CorreoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correos to fetch.
     */
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Correos.
     */
    cursor?: CorreoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Correos.
     */
    distinct?: CorreoScalarFieldEnum | CorreoScalarFieldEnum[]
  }

  /**
   * Correo findMany
   */
  export type CorreoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * Filter, which Correos to fetch.
     */
    where?: CorreoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correos to fetch.
     */
    orderBy?: CorreoOrderByWithRelationInput | CorreoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Correos.
     */
    cursor?: CorreoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correos.
     */
    skip?: number
    distinct?: CorreoScalarFieldEnum | CorreoScalarFieldEnum[]
  }

  /**
   * Correo create
   */
  export type CorreoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * The data needed to create a Correo.
     */
    data: XOR<CorreoCreateInput, CorreoUncheckedCreateInput>
  }

  /**
   * Correo createMany
   */
  export type CorreoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Correos.
     */
    data: CorreoCreateManyInput | CorreoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Correo createManyAndReturn
   */
  export type CorreoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Correos.
     */
    data: CorreoCreateManyInput | CorreoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Correo update
   */
  export type CorreoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * The data needed to update a Correo.
     */
    data: XOR<CorreoUpdateInput, CorreoUncheckedUpdateInput>
    /**
     * Choose, which Correo to update.
     */
    where: CorreoWhereUniqueInput
  }

  /**
   * Correo updateMany
   */
  export type CorreoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Correos.
     */
    data: XOR<CorreoUpdateManyMutationInput, CorreoUncheckedUpdateManyInput>
    /**
     * Filter which Correos to update
     */
    where?: CorreoWhereInput
  }

  /**
   * Correo upsert
   */
  export type CorreoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * The filter to search for the Correo to update in case it exists.
     */
    where: CorreoWhereUniqueInput
    /**
     * In case the Correo found by the `where` argument doesn't exist, create a new Correo with this data.
     */
    create: XOR<CorreoCreateInput, CorreoUncheckedCreateInput>
    /**
     * In case the Correo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CorreoUpdateInput, CorreoUncheckedUpdateInput>
  }

  /**
   * Correo delete
   */
  export type CorreoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
    /**
     * Filter which Correo to delete.
     */
    where: CorreoWhereUniqueInput
  }

  /**
   * Correo deleteMany
   */
  export type CorreoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Correos to delete
     */
    where?: CorreoWhereInput
  }

  /**
   * Correo without action
   */
  export type CorreoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo
     */
    select?: CorreoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreoInclude<ExtArgs> | null
  }


  /**
   * Model Direccion_Favorita
   */

  export type AggregateDireccion_Favorita = {
    _count: Direccion_FavoritaCountAggregateOutputType | null
    _avg: Direccion_FavoritaAvgAggregateOutputType | null
    _sum: Direccion_FavoritaSumAggregateOutputType | null
    _min: Direccion_FavoritaMinAggregateOutputType | null
    _max: Direccion_FavoritaMaxAggregateOutputType | null
  }

  export type Direccion_FavoritaAvgAggregateOutputType = {
    id_direccion: number | null
    usuario_id: number | null
  }

  export type Direccion_FavoritaSumAggregateOutputType = {
    id_direccion: number | null
    usuario_id: number | null
  }

  export type Direccion_FavoritaMinAggregateOutputType = {
    id_direccion: number | null
    usuario_id: number | null
  }

  export type Direccion_FavoritaMaxAggregateOutputType = {
    id_direccion: number | null
    usuario_id: number | null
  }

  export type Direccion_FavoritaCountAggregateOutputType = {
    id_direccion: number
    usuario_id: number
    _all: number
  }


  export type Direccion_FavoritaAvgAggregateInputType = {
    id_direccion?: true
    usuario_id?: true
  }

  export type Direccion_FavoritaSumAggregateInputType = {
    id_direccion?: true
    usuario_id?: true
  }

  export type Direccion_FavoritaMinAggregateInputType = {
    id_direccion?: true
    usuario_id?: true
  }

  export type Direccion_FavoritaMaxAggregateInputType = {
    id_direccion?: true
    usuario_id?: true
  }

  export type Direccion_FavoritaCountAggregateInputType = {
    id_direccion?: true
    usuario_id?: true
    _all?: true
  }

  export type Direccion_FavoritaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Direccion_Favorita to aggregate.
     */
    where?: Direccion_FavoritaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direccion_Favoritas to fetch.
     */
    orderBy?: Direccion_FavoritaOrderByWithRelationInput | Direccion_FavoritaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Direccion_FavoritaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direccion_Favoritas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direccion_Favoritas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Direccion_Favoritas
    **/
    _count?: true | Direccion_FavoritaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Direccion_FavoritaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Direccion_FavoritaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Direccion_FavoritaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Direccion_FavoritaMaxAggregateInputType
  }

  export type GetDireccion_FavoritaAggregateType<T extends Direccion_FavoritaAggregateArgs> = {
        [P in keyof T & keyof AggregateDireccion_Favorita]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDireccion_Favorita[P]>
      : GetScalarType<T[P], AggregateDireccion_Favorita[P]>
  }




  export type Direccion_FavoritaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Direccion_FavoritaWhereInput
    orderBy?: Direccion_FavoritaOrderByWithAggregationInput | Direccion_FavoritaOrderByWithAggregationInput[]
    by: Direccion_FavoritaScalarFieldEnum[] | Direccion_FavoritaScalarFieldEnum
    having?: Direccion_FavoritaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Direccion_FavoritaCountAggregateInputType | true
    _avg?: Direccion_FavoritaAvgAggregateInputType
    _sum?: Direccion_FavoritaSumAggregateInputType
    _min?: Direccion_FavoritaMinAggregateInputType
    _max?: Direccion_FavoritaMaxAggregateInputType
  }

  export type Direccion_FavoritaGroupByOutputType = {
    id_direccion: number
    usuario_id: number
    _count: Direccion_FavoritaCountAggregateOutputType | null
    _avg: Direccion_FavoritaAvgAggregateOutputType | null
    _sum: Direccion_FavoritaSumAggregateOutputType | null
    _min: Direccion_FavoritaMinAggregateOutputType | null
    _max: Direccion_FavoritaMaxAggregateOutputType | null
  }

  type GetDireccion_FavoritaGroupByPayload<T extends Direccion_FavoritaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Direccion_FavoritaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Direccion_FavoritaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Direccion_FavoritaGroupByOutputType[P]>
            : GetScalarType<T[P], Direccion_FavoritaGroupByOutputType[P]>
        }
      >
    >


  export type Direccion_FavoritaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_direccion?: boolean
    usuario_id?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direccion_Favorita"]>

  export type Direccion_FavoritaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_direccion?: boolean
    usuario_id?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direccion_Favorita"]>

  export type Direccion_FavoritaSelectScalar = {
    id_direccion?: boolean
    usuario_id?: boolean
  }

  export type Direccion_FavoritaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type Direccion_FavoritaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $Direccion_FavoritaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Direccion_Favorita"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_direccion: number
      usuario_id: number
    }, ExtArgs["result"]["direccion_Favorita"]>
    composites: {}
  }

  type Direccion_FavoritaGetPayload<S extends boolean | null | undefined | Direccion_FavoritaDefaultArgs> = $Result.GetResult<Prisma.$Direccion_FavoritaPayload, S>

  type Direccion_FavoritaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Direccion_FavoritaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Direccion_FavoritaCountAggregateInputType | true
    }

  export interface Direccion_FavoritaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Direccion_Favorita'], meta: { name: 'Direccion_Favorita' } }
    /**
     * Find zero or one Direccion_Favorita that matches the filter.
     * @param {Direccion_FavoritaFindUniqueArgs} args - Arguments to find a Direccion_Favorita
     * @example
     * // Get one Direccion_Favorita
     * const direccion_Favorita = await prisma.direccion_Favorita.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Direccion_FavoritaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, Direccion_FavoritaFindUniqueArgs<ExtArgs>>
    ): Prisma__Direccion_FavoritaClient<$Result.GetResult<Prisma.$Direccion_FavoritaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Direccion_Favorita that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Direccion_FavoritaFindUniqueOrThrowArgs} args - Arguments to find a Direccion_Favorita
     * @example
     * // Get one Direccion_Favorita
     * const direccion_Favorita = await prisma.direccion_Favorita.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Direccion_FavoritaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, Direccion_FavoritaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__Direccion_FavoritaClient<$Result.GetResult<Prisma.$Direccion_FavoritaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Direccion_Favorita that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Direccion_FavoritaFindFirstArgs} args - Arguments to find a Direccion_Favorita
     * @example
     * // Get one Direccion_Favorita
     * const direccion_Favorita = await prisma.direccion_Favorita.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Direccion_FavoritaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, Direccion_FavoritaFindFirstArgs<ExtArgs>>
    ): Prisma__Direccion_FavoritaClient<$Result.GetResult<Prisma.$Direccion_FavoritaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Direccion_Favorita that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Direccion_FavoritaFindFirstOrThrowArgs} args - Arguments to find a Direccion_Favorita
     * @example
     * // Get one Direccion_Favorita
     * const direccion_Favorita = await prisma.direccion_Favorita.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Direccion_FavoritaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, Direccion_FavoritaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__Direccion_FavoritaClient<$Result.GetResult<Prisma.$Direccion_FavoritaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Direccion_Favoritas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Direccion_FavoritaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Direccion_Favoritas
     * const direccion_Favoritas = await prisma.direccion_Favorita.findMany()
     * 
     * // Get first 10 Direccion_Favoritas
     * const direccion_Favoritas = await prisma.direccion_Favorita.findMany({ take: 10 })
     * 
     * // Only select the `id_direccion`
     * const direccion_FavoritaWithId_direccionOnly = await prisma.direccion_Favorita.findMany({ select: { id_direccion: true } })
     * 
    **/
    findMany<T extends Direccion_FavoritaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Direccion_FavoritaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Direccion_FavoritaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Direccion_Favorita.
     * @param {Direccion_FavoritaCreateArgs} args - Arguments to create a Direccion_Favorita.
     * @example
     * // Create one Direccion_Favorita
     * const Direccion_Favorita = await prisma.direccion_Favorita.create({
     *   data: {
     *     // ... data to create a Direccion_Favorita
     *   }
     * })
     * 
    **/
    create<T extends Direccion_FavoritaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, Direccion_FavoritaCreateArgs<ExtArgs>>
    ): Prisma__Direccion_FavoritaClient<$Result.GetResult<Prisma.$Direccion_FavoritaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Direccion_Favoritas.
     * @param {Direccion_FavoritaCreateManyArgs} args - Arguments to create many Direccion_Favoritas.
     * @example
     * // Create many Direccion_Favoritas
     * const direccion_Favorita = await prisma.direccion_Favorita.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends Direccion_FavoritaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Direccion_FavoritaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Direccion_Favoritas and returns the data saved in the database.
     * @param {Direccion_FavoritaCreateManyAndReturnArgs} args - Arguments to create many Direccion_Favoritas.
     * @example
     * // Create many Direccion_Favoritas
     * const direccion_Favorita = await prisma.direccion_Favorita.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Direccion_Favoritas and only return the `id_direccion`
     * const direccion_FavoritaWithId_direccionOnly = await prisma.direccion_Favorita.createManyAndReturn({ 
     *   select: { id_direccion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends Direccion_FavoritaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, Direccion_FavoritaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Direccion_FavoritaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Direccion_Favorita.
     * @param {Direccion_FavoritaDeleteArgs} args - Arguments to delete one Direccion_Favorita.
     * @example
     * // Delete one Direccion_Favorita
     * const Direccion_Favorita = await prisma.direccion_Favorita.delete({
     *   where: {
     *     // ... filter to delete one Direccion_Favorita
     *   }
     * })
     * 
    **/
    delete<T extends Direccion_FavoritaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, Direccion_FavoritaDeleteArgs<ExtArgs>>
    ): Prisma__Direccion_FavoritaClient<$Result.GetResult<Prisma.$Direccion_FavoritaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Direccion_Favorita.
     * @param {Direccion_FavoritaUpdateArgs} args - Arguments to update one Direccion_Favorita.
     * @example
     * // Update one Direccion_Favorita
     * const direccion_Favorita = await prisma.direccion_Favorita.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Direccion_FavoritaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, Direccion_FavoritaUpdateArgs<ExtArgs>>
    ): Prisma__Direccion_FavoritaClient<$Result.GetResult<Prisma.$Direccion_FavoritaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Direccion_Favoritas.
     * @param {Direccion_FavoritaDeleteManyArgs} args - Arguments to filter Direccion_Favoritas to delete.
     * @example
     * // Delete a few Direccion_Favoritas
     * const { count } = await prisma.direccion_Favorita.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Direccion_FavoritaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Direccion_FavoritaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Direccion_Favoritas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Direccion_FavoritaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Direccion_Favoritas
     * const direccion_Favorita = await prisma.direccion_Favorita.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Direccion_FavoritaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, Direccion_FavoritaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Direccion_Favorita.
     * @param {Direccion_FavoritaUpsertArgs} args - Arguments to update or create a Direccion_Favorita.
     * @example
     * // Update or create a Direccion_Favorita
     * const direccion_Favorita = await prisma.direccion_Favorita.upsert({
     *   create: {
     *     // ... data to create a Direccion_Favorita
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Direccion_Favorita we want to update
     *   }
     * })
    **/
    upsert<T extends Direccion_FavoritaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, Direccion_FavoritaUpsertArgs<ExtArgs>>
    ): Prisma__Direccion_FavoritaClient<$Result.GetResult<Prisma.$Direccion_FavoritaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Direccion_Favoritas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Direccion_FavoritaCountArgs} args - Arguments to filter Direccion_Favoritas to count.
     * @example
     * // Count the number of Direccion_Favoritas
     * const count = await prisma.direccion_Favorita.count({
     *   where: {
     *     // ... the filter for the Direccion_Favoritas we want to count
     *   }
     * })
    **/
    count<T extends Direccion_FavoritaCountArgs>(
      args?: Subset<T, Direccion_FavoritaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Direccion_FavoritaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Direccion_Favorita.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Direccion_FavoritaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Direccion_FavoritaAggregateArgs>(args: Subset<T, Direccion_FavoritaAggregateArgs>): Prisma.PrismaPromise<GetDireccion_FavoritaAggregateType<T>>

    /**
     * Group by Direccion_Favorita.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Direccion_FavoritaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Direccion_FavoritaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Direccion_FavoritaGroupByArgs['orderBy'] }
        : { orderBy?: Direccion_FavoritaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Direccion_FavoritaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDireccion_FavoritaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Direccion_Favorita model
   */
  readonly fields: Direccion_FavoritaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Direccion_Favorita.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Direccion_FavoritaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Direccion_Favorita model
   */ 
  interface Direccion_FavoritaFieldRefs {
    readonly id_direccion: FieldRef<"Direccion_Favorita", 'Int'>
    readonly usuario_id: FieldRef<"Direccion_Favorita", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Direccion_Favorita findUnique
   */
  export type Direccion_FavoritaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion_Favorita
     */
    select?: Direccion_FavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Direccion_FavoritaInclude<ExtArgs> | null
    /**
     * Filter, which Direccion_Favorita to fetch.
     */
    where: Direccion_FavoritaWhereUniqueInput
  }

  /**
   * Direccion_Favorita findUniqueOrThrow
   */
  export type Direccion_FavoritaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion_Favorita
     */
    select?: Direccion_FavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Direccion_FavoritaInclude<ExtArgs> | null
    /**
     * Filter, which Direccion_Favorita to fetch.
     */
    where: Direccion_FavoritaWhereUniqueInput
  }

  /**
   * Direccion_Favorita findFirst
   */
  export type Direccion_FavoritaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion_Favorita
     */
    select?: Direccion_FavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Direccion_FavoritaInclude<ExtArgs> | null
    /**
     * Filter, which Direccion_Favorita to fetch.
     */
    where?: Direccion_FavoritaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direccion_Favoritas to fetch.
     */
    orderBy?: Direccion_FavoritaOrderByWithRelationInput | Direccion_FavoritaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Direccion_Favoritas.
     */
    cursor?: Direccion_FavoritaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direccion_Favoritas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direccion_Favoritas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Direccion_Favoritas.
     */
    distinct?: Direccion_FavoritaScalarFieldEnum | Direccion_FavoritaScalarFieldEnum[]
  }

  /**
   * Direccion_Favorita findFirstOrThrow
   */
  export type Direccion_FavoritaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion_Favorita
     */
    select?: Direccion_FavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Direccion_FavoritaInclude<ExtArgs> | null
    /**
     * Filter, which Direccion_Favorita to fetch.
     */
    where?: Direccion_FavoritaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direccion_Favoritas to fetch.
     */
    orderBy?: Direccion_FavoritaOrderByWithRelationInput | Direccion_FavoritaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Direccion_Favoritas.
     */
    cursor?: Direccion_FavoritaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direccion_Favoritas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direccion_Favoritas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Direccion_Favoritas.
     */
    distinct?: Direccion_FavoritaScalarFieldEnum | Direccion_FavoritaScalarFieldEnum[]
  }

  /**
   * Direccion_Favorita findMany
   */
  export type Direccion_FavoritaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion_Favorita
     */
    select?: Direccion_FavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Direccion_FavoritaInclude<ExtArgs> | null
    /**
     * Filter, which Direccion_Favoritas to fetch.
     */
    where?: Direccion_FavoritaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direccion_Favoritas to fetch.
     */
    orderBy?: Direccion_FavoritaOrderByWithRelationInput | Direccion_FavoritaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Direccion_Favoritas.
     */
    cursor?: Direccion_FavoritaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direccion_Favoritas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direccion_Favoritas.
     */
    skip?: number
    distinct?: Direccion_FavoritaScalarFieldEnum | Direccion_FavoritaScalarFieldEnum[]
  }

  /**
   * Direccion_Favorita create
   */
  export type Direccion_FavoritaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion_Favorita
     */
    select?: Direccion_FavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Direccion_FavoritaInclude<ExtArgs> | null
    /**
     * The data needed to create a Direccion_Favorita.
     */
    data: XOR<Direccion_FavoritaCreateInput, Direccion_FavoritaUncheckedCreateInput>
  }

  /**
   * Direccion_Favorita createMany
   */
  export type Direccion_FavoritaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Direccion_Favoritas.
     */
    data: Direccion_FavoritaCreateManyInput | Direccion_FavoritaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Direccion_Favorita createManyAndReturn
   */
  export type Direccion_FavoritaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion_Favorita
     */
    select?: Direccion_FavoritaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Direccion_Favoritas.
     */
    data: Direccion_FavoritaCreateManyInput | Direccion_FavoritaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Direccion_FavoritaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Direccion_Favorita update
   */
  export type Direccion_FavoritaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion_Favorita
     */
    select?: Direccion_FavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Direccion_FavoritaInclude<ExtArgs> | null
    /**
     * The data needed to update a Direccion_Favorita.
     */
    data: XOR<Direccion_FavoritaUpdateInput, Direccion_FavoritaUncheckedUpdateInput>
    /**
     * Choose, which Direccion_Favorita to update.
     */
    where: Direccion_FavoritaWhereUniqueInput
  }

  /**
   * Direccion_Favorita updateMany
   */
  export type Direccion_FavoritaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Direccion_Favoritas.
     */
    data: XOR<Direccion_FavoritaUpdateManyMutationInput, Direccion_FavoritaUncheckedUpdateManyInput>
    /**
     * Filter which Direccion_Favoritas to update
     */
    where?: Direccion_FavoritaWhereInput
  }

  /**
   * Direccion_Favorita upsert
   */
  export type Direccion_FavoritaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion_Favorita
     */
    select?: Direccion_FavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Direccion_FavoritaInclude<ExtArgs> | null
    /**
     * The filter to search for the Direccion_Favorita to update in case it exists.
     */
    where: Direccion_FavoritaWhereUniqueInput
    /**
     * In case the Direccion_Favorita found by the `where` argument doesn't exist, create a new Direccion_Favorita with this data.
     */
    create: XOR<Direccion_FavoritaCreateInput, Direccion_FavoritaUncheckedCreateInput>
    /**
     * In case the Direccion_Favorita was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Direccion_FavoritaUpdateInput, Direccion_FavoritaUncheckedUpdateInput>
  }

  /**
   * Direccion_Favorita delete
   */
  export type Direccion_FavoritaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion_Favorita
     */
    select?: Direccion_FavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Direccion_FavoritaInclude<ExtArgs> | null
    /**
     * Filter which Direccion_Favorita to delete.
     */
    where: Direccion_FavoritaWhereUniqueInput
  }

  /**
   * Direccion_Favorita deleteMany
   */
  export type Direccion_FavoritaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Direccion_Favoritas to delete
     */
    where?: Direccion_FavoritaWhereInput
  }

  /**
   * Direccion_Favorita without action
   */
  export type Direccion_FavoritaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion_Favorita
     */
    select?: Direccion_FavoritaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Direccion_FavoritaInclude<ExtArgs> | null
  }


  /**
   * Model Contacto
   */

  export type AggregateContacto = {
    _count: ContactoCountAggregateOutputType | null
    _avg: ContactoAvgAggregateOutputType | null
    _sum: ContactoSumAggregateOutputType | null
    _min: ContactoMinAggregateOutputType | null
    _max: ContactoMaxAggregateOutputType | null
  }

  export type ContactoAvgAggregateOutputType = {
    id: number | null
    usuario_id: number | null
  }

  export type ContactoSumAggregateOutputType = {
    id: number | null
    usuario_id: number | null
  }

  export type ContactoMinAggregateOutputType = {
    id: number | null
    direccion_correo: string | null
    nombre: string | null
    usuario_id: number | null
  }

  export type ContactoMaxAggregateOutputType = {
    id: number | null
    direccion_correo: string | null
    nombre: string | null
    usuario_id: number | null
  }

  export type ContactoCountAggregateOutputType = {
    id: number
    direccion_correo: number
    nombre: number
    usuario_id: number
    _all: number
  }


  export type ContactoAvgAggregateInputType = {
    id?: true
    usuario_id?: true
  }

  export type ContactoSumAggregateInputType = {
    id?: true
    usuario_id?: true
  }

  export type ContactoMinAggregateInputType = {
    id?: true
    direccion_correo?: true
    nombre?: true
    usuario_id?: true
  }

  export type ContactoMaxAggregateInputType = {
    id?: true
    direccion_correo?: true
    nombre?: true
    usuario_id?: true
  }

  export type ContactoCountAggregateInputType = {
    id?: true
    direccion_correo?: true
    nombre?: true
    usuario_id?: true
    _all?: true
  }

  export type ContactoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contacto to aggregate.
     */
    where?: ContactoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contactos to fetch.
     */
    orderBy?: ContactoOrderByWithRelationInput | ContactoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ContactoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contactos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contactos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Contactos
    **/
    _count?: true | ContactoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ContactoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ContactoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContactoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContactoMaxAggregateInputType
  }

  export type GetContactoAggregateType<T extends ContactoAggregateArgs> = {
        [P in keyof T & keyof AggregateContacto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContacto[P]>
      : GetScalarType<T[P], AggregateContacto[P]>
  }




  export type ContactoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactoWhereInput
    orderBy?: ContactoOrderByWithAggregationInput | ContactoOrderByWithAggregationInput[]
    by: ContactoScalarFieldEnum[] | ContactoScalarFieldEnum
    having?: ContactoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContactoCountAggregateInputType | true
    _avg?: ContactoAvgAggregateInputType
    _sum?: ContactoSumAggregateInputType
    _min?: ContactoMinAggregateInputType
    _max?: ContactoMaxAggregateInputType
  }

  export type ContactoGroupByOutputType = {
    id: number
    direccion_correo: string
    nombre: string
    usuario_id: number
    _count: ContactoCountAggregateOutputType | null
    _avg: ContactoAvgAggregateOutputType | null
    _sum: ContactoSumAggregateOutputType | null
    _min: ContactoMinAggregateOutputType | null
    _max: ContactoMaxAggregateOutputType | null
  }

  type GetContactoGroupByPayload<T extends ContactoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContactoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContactoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContactoGroupByOutputType[P]>
            : GetScalarType<T[P], ContactoGroupByOutputType[P]>
        }
      >
    >


  export type ContactoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    direccion_correo?: boolean
    nombre?: boolean
    usuario_id?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contacto"]>

  export type ContactoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    direccion_correo?: boolean
    nombre?: boolean
    usuario_id?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contacto"]>

  export type ContactoSelectScalar = {
    id?: boolean
    direccion_correo?: boolean
    nombre?: boolean
    usuario_id?: boolean
  }

  export type ContactoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type ContactoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $ContactoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Contacto"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      direccion_correo: string
      nombre: string
      usuario_id: number
    }, ExtArgs["result"]["contacto"]>
    composites: {}
  }

  type ContactoGetPayload<S extends boolean | null | undefined | ContactoDefaultArgs> = $Result.GetResult<Prisma.$ContactoPayload, S>

  type ContactoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ContactoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ContactoCountAggregateInputType | true
    }

  export interface ContactoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Contacto'], meta: { name: 'Contacto' } }
    /**
     * Find zero or one Contacto that matches the filter.
     * @param {ContactoFindUniqueArgs} args - Arguments to find a Contacto
     * @example
     * // Get one Contacto
     * const contacto = await prisma.contacto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ContactoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ContactoFindUniqueArgs<ExtArgs>>
    ): Prisma__ContactoClient<$Result.GetResult<Prisma.$ContactoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Contacto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ContactoFindUniqueOrThrowArgs} args - Arguments to find a Contacto
     * @example
     * // Get one Contacto
     * const contacto = await prisma.contacto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ContactoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ContactoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ContactoClient<$Result.GetResult<Prisma.$ContactoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Contacto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactoFindFirstArgs} args - Arguments to find a Contacto
     * @example
     * // Get one Contacto
     * const contacto = await prisma.contacto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ContactoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ContactoFindFirstArgs<ExtArgs>>
    ): Prisma__ContactoClient<$Result.GetResult<Prisma.$ContactoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Contacto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactoFindFirstOrThrowArgs} args - Arguments to find a Contacto
     * @example
     * // Get one Contacto
     * const contacto = await prisma.contacto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ContactoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ContactoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ContactoClient<$Result.GetResult<Prisma.$ContactoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Contactos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contactos
     * const contactos = await prisma.contacto.findMany()
     * 
     * // Get first 10 Contactos
     * const contactos = await prisma.contacto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contactoWithIdOnly = await prisma.contacto.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ContactoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ContactoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Contacto.
     * @param {ContactoCreateArgs} args - Arguments to create a Contacto.
     * @example
     * // Create one Contacto
     * const Contacto = await prisma.contacto.create({
     *   data: {
     *     // ... data to create a Contacto
     *   }
     * })
     * 
    **/
    create<T extends ContactoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ContactoCreateArgs<ExtArgs>>
    ): Prisma__ContactoClient<$Result.GetResult<Prisma.$ContactoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Contactos.
     * @param {ContactoCreateManyArgs} args - Arguments to create many Contactos.
     * @example
     * // Create many Contactos
     * const contacto = await prisma.contacto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends ContactoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ContactoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Contactos and returns the data saved in the database.
     * @param {ContactoCreateManyAndReturnArgs} args - Arguments to create many Contactos.
     * @example
     * // Create many Contactos
     * const contacto = await prisma.contacto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Contactos and only return the `id`
     * const contactoWithIdOnly = await prisma.contacto.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends ContactoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, ContactoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Contacto.
     * @param {ContactoDeleteArgs} args - Arguments to delete one Contacto.
     * @example
     * // Delete one Contacto
     * const Contacto = await prisma.contacto.delete({
     *   where: {
     *     // ... filter to delete one Contacto
     *   }
     * })
     * 
    **/
    delete<T extends ContactoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ContactoDeleteArgs<ExtArgs>>
    ): Prisma__ContactoClient<$Result.GetResult<Prisma.$ContactoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Contacto.
     * @param {ContactoUpdateArgs} args - Arguments to update one Contacto.
     * @example
     * // Update one Contacto
     * const contacto = await prisma.contacto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ContactoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ContactoUpdateArgs<ExtArgs>>
    ): Prisma__ContactoClient<$Result.GetResult<Prisma.$ContactoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Contactos.
     * @param {ContactoDeleteManyArgs} args - Arguments to filter Contactos to delete.
     * @example
     * // Delete a few Contactos
     * const { count } = await prisma.contacto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ContactoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ContactoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contactos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contactos
     * const contacto = await prisma.contacto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ContactoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ContactoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Contacto.
     * @param {ContactoUpsertArgs} args - Arguments to update or create a Contacto.
     * @example
     * // Update or create a Contacto
     * const contacto = await prisma.contacto.upsert({
     *   create: {
     *     // ... data to create a Contacto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contacto we want to update
     *   }
     * })
    **/
    upsert<T extends ContactoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ContactoUpsertArgs<ExtArgs>>
    ): Prisma__ContactoClient<$Result.GetResult<Prisma.$ContactoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Contactos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactoCountArgs} args - Arguments to filter Contactos to count.
     * @example
     * // Count the number of Contactos
     * const count = await prisma.contacto.count({
     *   where: {
     *     // ... the filter for the Contactos we want to count
     *   }
     * })
    **/
    count<T extends ContactoCountArgs>(
      args?: Subset<T, ContactoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContactoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contacto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContactoAggregateArgs>(args: Subset<T, ContactoAggregateArgs>): Prisma.PrismaPromise<GetContactoAggregateType<T>>

    /**
     * Group by Contacto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContactoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContactoGroupByArgs['orderBy'] }
        : { orderBy?: ContactoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContactoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContactoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Contacto model
   */
  readonly fields: ContactoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Contacto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ContactoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Contacto model
   */ 
  interface ContactoFieldRefs {
    readonly id: FieldRef<"Contacto", 'Int'>
    readonly direccion_correo: FieldRef<"Contacto", 'String'>
    readonly nombre: FieldRef<"Contacto", 'String'>
    readonly usuario_id: FieldRef<"Contacto", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Contacto findUnique
   */
  export type ContactoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contacto
     */
    select?: ContactoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactoInclude<ExtArgs> | null
    /**
     * Filter, which Contacto to fetch.
     */
    where: ContactoWhereUniqueInput
  }

  /**
   * Contacto findUniqueOrThrow
   */
  export type ContactoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contacto
     */
    select?: ContactoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactoInclude<ExtArgs> | null
    /**
     * Filter, which Contacto to fetch.
     */
    where: ContactoWhereUniqueInput
  }

  /**
   * Contacto findFirst
   */
  export type ContactoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contacto
     */
    select?: ContactoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactoInclude<ExtArgs> | null
    /**
     * Filter, which Contacto to fetch.
     */
    where?: ContactoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contactos to fetch.
     */
    orderBy?: ContactoOrderByWithRelationInput | ContactoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contactos.
     */
    cursor?: ContactoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contactos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contactos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contactos.
     */
    distinct?: ContactoScalarFieldEnum | ContactoScalarFieldEnum[]
  }

  /**
   * Contacto findFirstOrThrow
   */
  export type ContactoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contacto
     */
    select?: ContactoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactoInclude<ExtArgs> | null
    /**
     * Filter, which Contacto to fetch.
     */
    where?: ContactoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contactos to fetch.
     */
    orderBy?: ContactoOrderByWithRelationInput | ContactoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contactos.
     */
    cursor?: ContactoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contactos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contactos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contactos.
     */
    distinct?: ContactoScalarFieldEnum | ContactoScalarFieldEnum[]
  }

  /**
   * Contacto findMany
   */
  export type ContactoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contacto
     */
    select?: ContactoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactoInclude<ExtArgs> | null
    /**
     * Filter, which Contactos to fetch.
     */
    where?: ContactoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contactos to fetch.
     */
    orderBy?: ContactoOrderByWithRelationInput | ContactoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Contactos.
     */
    cursor?: ContactoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contactos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contactos.
     */
    skip?: number
    distinct?: ContactoScalarFieldEnum | ContactoScalarFieldEnum[]
  }

  /**
   * Contacto create
   */
  export type ContactoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contacto
     */
    select?: ContactoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactoInclude<ExtArgs> | null
    /**
     * The data needed to create a Contacto.
     */
    data: XOR<ContactoCreateInput, ContactoUncheckedCreateInput>
  }

  /**
   * Contacto createMany
   */
  export type ContactoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Contactos.
     */
    data: ContactoCreateManyInput | ContactoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Contacto createManyAndReturn
   */
  export type ContactoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contacto
     */
    select?: ContactoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Contactos.
     */
    data: ContactoCreateManyInput | ContactoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Contacto update
   */
  export type ContactoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contacto
     */
    select?: ContactoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactoInclude<ExtArgs> | null
    /**
     * The data needed to update a Contacto.
     */
    data: XOR<ContactoUpdateInput, ContactoUncheckedUpdateInput>
    /**
     * Choose, which Contacto to update.
     */
    where: ContactoWhereUniqueInput
  }

  /**
   * Contacto updateMany
   */
  export type ContactoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Contactos.
     */
    data: XOR<ContactoUpdateManyMutationInput, ContactoUncheckedUpdateManyInput>
    /**
     * Filter which Contactos to update
     */
    where?: ContactoWhereInput
  }

  /**
   * Contacto upsert
   */
  export type ContactoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contacto
     */
    select?: ContactoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactoInclude<ExtArgs> | null
    /**
     * The filter to search for the Contacto to update in case it exists.
     */
    where: ContactoWhereUniqueInput
    /**
     * In case the Contacto found by the `where` argument doesn't exist, create a new Contacto with this data.
     */
    create: XOR<ContactoCreateInput, ContactoUncheckedCreateInput>
    /**
     * In case the Contacto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ContactoUpdateInput, ContactoUncheckedUpdateInput>
  }

  /**
   * Contacto delete
   */
  export type ContactoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contacto
     */
    select?: ContactoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactoInclude<ExtArgs> | null
    /**
     * Filter which Contacto to delete.
     */
    where: ContactoWhereUniqueInput
  }

  /**
   * Contacto deleteMany
   */
  export type ContactoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contactos to delete
     */
    where?: ContactoWhereInput
  }

  /**
   * Contacto without action
   */
  export type ContactoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contacto
     */
    select?: ContactoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactoInclude<ExtArgs> | null
  }


  /**
   * Model Correo_Bloqueado
   */

  export type AggregateCorreo_Bloqueado = {
    _count: Correo_BloqueadoCountAggregateOutputType | null
    _avg: Correo_BloqueadoAvgAggregateOutputType | null
    _sum: Correo_BloqueadoSumAggregateOutputType | null
    _min: Correo_BloqueadoMinAggregateOutputType | null
    _max: Correo_BloqueadoMaxAggregateOutputType | null
  }

  export type Correo_BloqueadoAvgAggregateOutputType = {
    correo_bloqueado_id: number | null
    usuario_id: number | null
  }

  export type Correo_BloqueadoSumAggregateOutputType = {
    correo_bloqueado_id: number | null
    usuario_id: number | null
  }

  export type Correo_BloqueadoMinAggregateOutputType = {
    correo_bloqueado_id: number | null
    usuario_id: number | null
  }

  export type Correo_BloqueadoMaxAggregateOutputType = {
    correo_bloqueado_id: number | null
    usuario_id: number | null
  }

  export type Correo_BloqueadoCountAggregateOutputType = {
    correo_bloqueado_id: number
    usuario_id: number
    _all: number
  }


  export type Correo_BloqueadoAvgAggregateInputType = {
    correo_bloqueado_id?: true
    usuario_id?: true
  }

  export type Correo_BloqueadoSumAggregateInputType = {
    correo_bloqueado_id?: true
    usuario_id?: true
  }

  export type Correo_BloqueadoMinAggregateInputType = {
    correo_bloqueado_id?: true
    usuario_id?: true
  }

  export type Correo_BloqueadoMaxAggregateInputType = {
    correo_bloqueado_id?: true
    usuario_id?: true
  }

  export type Correo_BloqueadoCountAggregateInputType = {
    correo_bloqueado_id?: true
    usuario_id?: true
    _all?: true
  }

  export type Correo_BloqueadoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Correo_Bloqueado to aggregate.
     */
    where?: Correo_BloqueadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correo_Bloqueados to fetch.
     */
    orderBy?: Correo_BloqueadoOrderByWithRelationInput | Correo_BloqueadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Correo_BloqueadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correo_Bloqueados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correo_Bloqueados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Correo_Bloqueados
    **/
    _count?: true | Correo_BloqueadoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Correo_BloqueadoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Correo_BloqueadoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Correo_BloqueadoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Correo_BloqueadoMaxAggregateInputType
  }

  export type GetCorreo_BloqueadoAggregateType<T extends Correo_BloqueadoAggregateArgs> = {
        [P in keyof T & keyof AggregateCorreo_Bloqueado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCorreo_Bloqueado[P]>
      : GetScalarType<T[P], AggregateCorreo_Bloqueado[P]>
  }




  export type Correo_BloqueadoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Correo_BloqueadoWhereInput
    orderBy?: Correo_BloqueadoOrderByWithAggregationInput | Correo_BloqueadoOrderByWithAggregationInput[]
    by: Correo_BloqueadoScalarFieldEnum[] | Correo_BloqueadoScalarFieldEnum
    having?: Correo_BloqueadoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Correo_BloqueadoCountAggregateInputType | true
    _avg?: Correo_BloqueadoAvgAggregateInputType
    _sum?: Correo_BloqueadoSumAggregateInputType
    _min?: Correo_BloqueadoMinAggregateInputType
    _max?: Correo_BloqueadoMaxAggregateInputType
  }

  export type Correo_BloqueadoGroupByOutputType = {
    correo_bloqueado_id: number
    usuario_id: number
    _count: Correo_BloqueadoCountAggregateOutputType | null
    _avg: Correo_BloqueadoAvgAggregateOutputType | null
    _sum: Correo_BloqueadoSumAggregateOutputType | null
    _min: Correo_BloqueadoMinAggregateOutputType | null
    _max: Correo_BloqueadoMaxAggregateOutputType | null
  }

  type GetCorreo_BloqueadoGroupByPayload<T extends Correo_BloqueadoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Correo_BloqueadoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Correo_BloqueadoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Correo_BloqueadoGroupByOutputType[P]>
            : GetScalarType<T[P], Correo_BloqueadoGroupByOutputType[P]>
        }
      >
    >


  export type Correo_BloqueadoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    correo_bloqueado_id?: boolean
    usuario_id?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["correo_Bloqueado"]>

  export type Correo_BloqueadoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    correo_bloqueado_id?: boolean
    usuario_id?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["correo_Bloqueado"]>

  export type Correo_BloqueadoSelectScalar = {
    correo_bloqueado_id?: boolean
    usuario_id?: boolean
  }

  export type Correo_BloqueadoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type Correo_BloqueadoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $Correo_BloqueadoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Correo_Bloqueado"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      correo_bloqueado_id: number
      usuario_id: number
    }, ExtArgs["result"]["correo_Bloqueado"]>
    composites: {}
  }

  type Correo_BloqueadoGetPayload<S extends boolean | null | undefined | Correo_BloqueadoDefaultArgs> = $Result.GetResult<Prisma.$Correo_BloqueadoPayload, S>

  type Correo_BloqueadoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Correo_BloqueadoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Correo_BloqueadoCountAggregateInputType | true
    }

  export interface Correo_BloqueadoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Correo_Bloqueado'], meta: { name: 'Correo_Bloqueado' } }
    /**
     * Find zero or one Correo_Bloqueado that matches the filter.
     * @param {Correo_BloqueadoFindUniqueArgs} args - Arguments to find a Correo_Bloqueado
     * @example
     * // Get one Correo_Bloqueado
     * const correo_Bloqueado = await prisma.correo_Bloqueado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Correo_BloqueadoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, Correo_BloqueadoFindUniqueArgs<ExtArgs>>
    ): Prisma__Correo_BloqueadoClient<$Result.GetResult<Prisma.$Correo_BloqueadoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Correo_Bloqueado that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Correo_BloqueadoFindUniqueOrThrowArgs} args - Arguments to find a Correo_Bloqueado
     * @example
     * // Get one Correo_Bloqueado
     * const correo_Bloqueado = await prisma.correo_Bloqueado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Correo_BloqueadoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, Correo_BloqueadoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__Correo_BloqueadoClient<$Result.GetResult<Prisma.$Correo_BloqueadoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Correo_Bloqueado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Correo_BloqueadoFindFirstArgs} args - Arguments to find a Correo_Bloqueado
     * @example
     * // Get one Correo_Bloqueado
     * const correo_Bloqueado = await prisma.correo_Bloqueado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Correo_BloqueadoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, Correo_BloqueadoFindFirstArgs<ExtArgs>>
    ): Prisma__Correo_BloqueadoClient<$Result.GetResult<Prisma.$Correo_BloqueadoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Correo_Bloqueado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Correo_BloqueadoFindFirstOrThrowArgs} args - Arguments to find a Correo_Bloqueado
     * @example
     * // Get one Correo_Bloqueado
     * const correo_Bloqueado = await prisma.correo_Bloqueado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Correo_BloqueadoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, Correo_BloqueadoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__Correo_BloqueadoClient<$Result.GetResult<Prisma.$Correo_BloqueadoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Correo_Bloqueados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Correo_BloqueadoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Correo_Bloqueados
     * const correo_Bloqueados = await prisma.correo_Bloqueado.findMany()
     * 
     * // Get first 10 Correo_Bloqueados
     * const correo_Bloqueados = await prisma.correo_Bloqueado.findMany({ take: 10 })
     * 
     * // Only select the `correo_bloqueado_id`
     * const correo_BloqueadoWithCorreo_bloqueado_idOnly = await prisma.correo_Bloqueado.findMany({ select: { correo_bloqueado_id: true } })
     * 
    **/
    findMany<T extends Correo_BloqueadoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Correo_BloqueadoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Correo_BloqueadoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Correo_Bloqueado.
     * @param {Correo_BloqueadoCreateArgs} args - Arguments to create a Correo_Bloqueado.
     * @example
     * // Create one Correo_Bloqueado
     * const Correo_Bloqueado = await prisma.correo_Bloqueado.create({
     *   data: {
     *     // ... data to create a Correo_Bloqueado
     *   }
     * })
     * 
    **/
    create<T extends Correo_BloqueadoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, Correo_BloqueadoCreateArgs<ExtArgs>>
    ): Prisma__Correo_BloqueadoClient<$Result.GetResult<Prisma.$Correo_BloqueadoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Correo_Bloqueados.
     * @param {Correo_BloqueadoCreateManyArgs} args - Arguments to create many Correo_Bloqueados.
     * @example
     * // Create many Correo_Bloqueados
     * const correo_Bloqueado = await prisma.correo_Bloqueado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends Correo_BloqueadoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Correo_BloqueadoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Correo_Bloqueados and returns the data saved in the database.
     * @param {Correo_BloqueadoCreateManyAndReturnArgs} args - Arguments to create many Correo_Bloqueados.
     * @example
     * // Create many Correo_Bloqueados
     * const correo_Bloqueado = await prisma.correo_Bloqueado.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Correo_Bloqueados and only return the `correo_bloqueado_id`
     * const correo_BloqueadoWithCorreo_bloqueado_idOnly = await prisma.correo_Bloqueado.createManyAndReturn({ 
     *   select: { correo_bloqueado_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends Correo_BloqueadoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, Correo_BloqueadoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Correo_BloqueadoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Correo_Bloqueado.
     * @param {Correo_BloqueadoDeleteArgs} args - Arguments to delete one Correo_Bloqueado.
     * @example
     * // Delete one Correo_Bloqueado
     * const Correo_Bloqueado = await prisma.correo_Bloqueado.delete({
     *   where: {
     *     // ... filter to delete one Correo_Bloqueado
     *   }
     * })
     * 
    **/
    delete<T extends Correo_BloqueadoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, Correo_BloqueadoDeleteArgs<ExtArgs>>
    ): Prisma__Correo_BloqueadoClient<$Result.GetResult<Prisma.$Correo_BloqueadoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Correo_Bloqueado.
     * @param {Correo_BloqueadoUpdateArgs} args - Arguments to update one Correo_Bloqueado.
     * @example
     * // Update one Correo_Bloqueado
     * const correo_Bloqueado = await prisma.correo_Bloqueado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Correo_BloqueadoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, Correo_BloqueadoUpdateArgs<ExtArgs>>
    ): Prisma__Correo_BloqueadoClient<$Result.GetResult<Prisma.$Correo_BloqueadoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Correo_Bloqueados.
     * @param {Correo_BloqueadoDeleteManyArgs} args - Arguments to filter Correo_Bloqueados to delete.
     * @example
     * // Delete a few Correo_Bloqueados
     * const { count } = await prisma.correo_Bloqueado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Correo_BloqueadoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Correo_BloqueadoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Correo_Bloqueados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Correo_BloqueadoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Correo_Bloqueados
     * const correo_Bloqueado = await prisma.correo_Bloqueado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Correo_BloqueadoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, Correo_BloqueadoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Correo_Bloqueado.
     * @param {Correo_BloqueadoUpsertArgs} args - Arguments to update or create a Correo_Bloqueado.
     * @example
     * // Update or create a Correo_Bloqueado
     * const correo_Bloqueado = await prisma.correo_Bloqueado.upsert({
     *   create: {
     *     // ... data to create a Correo_Bloqueado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Correo_Bloqueado we want to update
     *   }
     * })
    **/
    upsert<T extends Correo_BloqueadoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, Correo_BloqueadoUpsertArgs<ExtArgs>>
    ): Prisma__Correo_BloqueadoClient<$Result.GetResult<Prisma.$Correo_BloqueadoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Correo_Bloqueados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Correo_BloqueadoCountArgs} args - Arguments to filter Correo_Bloqueados to count.
     * @example
     * // Count the number of Correo_Bloqueados
     * const count = await prisma.correo_Bloqueado.count({
     *   where: {
     *     // ... the filter for the Correo_Bloqueados we want to count
     *   }
     * })
    **/
    count<T extends Correo_BloqueadoCountArgs>(
      args?: Subset<T, Correo_BloqueadoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Correo_BloqueadoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Correo_Bloqueado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Correo_BloqueadoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Correo_BloqueadoAggregateArgs>(args: Subset<T, Correo_BloqueadoAggregateArgs>): Prisma.PrismaPromise<GetCorreo_BloqueadoAggregateType<T>>

    /**
     * Group by Correo_Bloqueado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Correo_BloqueadoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Correo_BloqueadoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Correo_BloqueadoGroupByArgs['orderBy'] }
        : { orderBy?: Correo_BloqueadoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Correo_BloqueadoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCorreo_BloqueadoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Correo_Bloqueado model
   */
  readonly fields: Correo_BloqueadoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Correo_Bloqueado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Correo_BloqueadoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Correo_Bloqueado model
   */ 
  interface Correo_BloqueadoFieldRefs {
    readonly correo_bloqueado_id: FieldRef<"Correo_Bloqueado", 'Int'>
    readonly usuario_id: FieldRef<"Correo_Bloqueado", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Correo_Bloqueado findUnique
   */
  export type Correo_BloqueadoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo_Bloqueado
     */
    select?: Correo_BloqueadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Correo_BloqueadoInclude<ExtArgs> | null
    /**
     * Filter, which Correo_Bloqueado to fetch.
     */
    where: Correo_BloqueadoWhereUniqueInput
  }

  /**
   * Correo_Bloqueado findUniqueOrThrow
   */
  export type Correo_BloqueadoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo_Bloqueado
     */
    select?: Correo_BloqueadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Correo_BloqueadoInclude<ExtArgs> | null
    /**
     * Filter, which Correo_Bloqueado to fetch.
     */
    where: Correo_BloqueadoWhereUniqueInput
  }

  /**
   * Correo_Bloqueado findFirst
   */
  export type Correo_BloqueadoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo_Bloqueado
     */
    select?: Correo_BloqueadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Correo_BloqueadoInclude<ExtArgs> | null
    /**
     * Filter, which Correo_Bloqueado to fetch.
     */
    where?: Correo_BloqueadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correo_Bloqueados to fetch.
     */
    orderBy?: Correo_BloqueadoOrderByWithRelationInput | Correo_BloqueadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Correo_Bloqueados.
     */
    cursor?: Correo_BloqueadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correo_Bloqueados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correo_Bloqueados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Correo_Bloqueados.
     */
    distinct?: Correo_BloqueadoScalarFieldEnum | Correo_BloqueadoScalarFieldEnum[]
  }

  /**
   * Correo_Bloqueado findFirstOrThrow
   */
  export type Correo_BloqueadoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo_Bloqueado
     */
    select?: Correo_BloqueadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Correo_BloqueadoInclude<ExtArgs> | null
    /**
     * Filter, which Correo_Bloqueado to fetch.
     */
    where?: Correo_BloqueadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correo_Bloqueados to fetch.
     */
    orderBy?: Correo_BloqueadoOrderByWithRelationInput | Correo_BloqueadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Correo_Bloqueados.
     */
    cursor?: Correo_BloqueadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correo_Bloqueados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correo_Bloqueados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Correo_Bloqueados.
     */
    distinct?: Correo_BloqueadoScalarFieldEnum | Correo_BloqueadoScalarFieldEnum[]
  }

  /**
   * Correo_Bloqueado findMany
   */
  export type Correo_BloqueadoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo_Bloqueado
     */
    select?: Correo_BloqueadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Correo_BloqueadoInclude<ExtArgs> | null
    /**
     * Filter, which Correo_Bloqueados to fetch.
     */
    where?: Correo_BloqueadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correo_Bloqueados to fetch.
     */
    orderBy?: Correo_BloqueadoOrderByWithRelationInput | Correo_BloqueadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Correo_Bloqueados.
     */
    cursor?: Correo_BloqueadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correo_Bloqueados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correo_Bloqueados.
     */
    skip?: number
    distinct?: Correo_BloqueadoScalarFieldEnum | Correo_BloqueadoScalarFieldEnum[]
  }

  /**
   * Correo_Bloqueado create
   */
  export type Correo_BloqueadoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo_Bloqueado
     */
    select?: Correo_BloqueadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Correo_BloqueadoInclude<ExtArgs> | null
    /**
     * The data needed to create a Correo_Bloqueado.
     */
    data: XOR<Correo_BloqueadoCreateInput, Correo_BloqueadoUncheckedCreateInput>
  }

  /**
   * Correo_Bloqueado createMany
   */
  export type Correo_BloqueadoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Correo_Bloqueados.
     */
    data: Correo_BloqueadoCreateManyInput | Correo_BloqueadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Correo_Bloqueado createManyAndReturn
   */
  export type Correo_BloqueadoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo_Bloqueado
     */
    select?: Correo_BloqueadoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Correo_Bloqueados.
     */
    data: Correo_BloqueadoCreateManyInput | Correo_BloqueadoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Correo_BloqueadoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Correo_Bloqueado update
   */
  export type Correo_BloqueadoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo_Bloqueado
     */
    select?: Correo_BloqueadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Correo_BloqueadoInclude<ExtArgs> | null
    /**
     * The data needed to update a Correo_Bloqueado.
     */
    data: XOR<Correo_BloqueadoUpdateInput, Correo_BloqueadoUncheckedUpdateInput>
    /**
     * Choose, which Correo_Bloqueado to update.
     */
    where: Correo_BloqueadoWhereUniqueInput
  }

  /**
   * Correo_Bloqueado updateMany
   */
  export type Correo_BloqueadoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Correo_Bloqueados.
     */
    data: XOR<Correo_BloqueadoUpdateManyMutationInput, Correo_BloqueadoUncheckedUpdateManyInput>
    /**
     * Filter which Correo_Bloqueados to update
     */
    where?: Correo_BloqueadoWhereInput
  }

  /**
   * Correo_Bloqueado upsert
   */
  export type Correo_BloqueadoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo_Bloqueado
     */
    select?: Correo_BloqueadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Correo_BloqueadoInclude<ExtArgs> | null
    /**
     * The filter to search for the Correo_Bloqueado to update in case it exists.
     */
    where: Correo_BloqueadoWhereUniqueInput
    /**
     * In case the Correo_Bloqueado found by the `where` argument doesn't exist, create a new Correo_Bloqueado with this data.
     */
    create: XOR<Correo_BloqueadoCreateInput, Correo_BloqueadoUncheckedCreateInput>
    /**
     * In case the Correo_Bloqueado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Correo_BloqueadoUpdateInput, Correo_BloqueadoUncheckedUpdateInput>
  }

  /**
   * Correo_Bloqueado delete
   */
  export type Correo_BloqueadoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo_Bloqueado
     */
    select?: Correo_BloqueadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Correo_BloqueadoInclude<ExtArgs> | null
    /**
     * Filter which Correo_Bloqueado to delete.
     */
    where: Correo_BloqueadoWhereUniqueInput
  }

  /**
   * Correo_Bloqueado deleteMany
   */
  export type Correo_BloqueadoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Correo_Bloqueados to delete
     */
    where?: Correo_BloqueadoWhereInput
  }

  /**
   * Correo_Bloqueado without action
   */
  export type Correo_BloqueadoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correo_Bloqueado
     */
    select?: Correo_BloqueadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Correo_BloqueadoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id_usuario: 'id_usuario',
    direccion_correo: 'direccion_correo',
    descripcion: 'descripcion',
    nombre: 'nombre',
    clave: 'clave'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const CorreoScalarFieldEnum: {
    correo_id: 'correo_id',
    remitente_id: 'remitente_id',
    destinatario_id: 'destinatario_id',
    asunto: 'asunto',
    cuerpo: 'cuerpo',
    es_favorito: 'es_favorito'
  };

  export type CorreoScalarFieldEnum = (typeof CorreoScalarFieldEnum)[keyof typeof CorreoScalarFieldEnum]


  export const Direccion_FavoritaScalarFieldEnum: {
    id_direccion: 'id_direccion',
    usuario_id: 'usuario_id'
  };

  export type Direccion_FavoritaScalarFieldEnum = (typeof Direccion_FavoritaScalarFieldEnum)[keyof typeof Direccion_FavoritaScalarFieldEnum]


  export const ContactoScalarFieldEnum: {
    id: 'id',
    direccion_correo: 'direccion_correo',
    nombre: 'nombre',
    usuario_id: 'usuario_id'
  };

  export type ContactoScalarFieldEnum = (typeof ContactoScalarFieldEnum)[keyof typeof ContactoScalarFieldEnum]


  export const Correo_BloqueadoScalarFieldEnum: {
    correo_bloqueado_id: 'correo_bloqueado_id',
    usuario_id: 'usuario_id'
  };

  export type Correo_BloqueadoScalarFieldEnum = (typeof Correo_BloqueadoScalarFieldEnum)[keyof typeof Correo_BloqueadoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id_usuario?: IntFilter<"Usuario"> | number
    direccion_correo?: StringFilter<"Usuario"> | string
    descripcion?: StringNullableFilter<"Usuario"> | string | null
    nombre?: StringNullableFilter<"Usuario"> | string | null
    clave?: StringNullableFilter<"Usuario"> | string | null
    correos_enviados?: CorreoListRelationFilter
    correos_recibidos?: CorreoListRelationFilter
    direcciones_favoritas?: Direccion_FavoritaListRelationFilter
    correos_bloqueados?: Correo_BloqueadoListRelationFilter
    contactos?: ContactoListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id_usuario?: SortOrder
    direccion_correo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    nombre?: SortOrderInput | SortOrder
    clave?: SortOrderInput | SortOrder
    correos_enviados?: CorreoOrderByRelationAggregateInput
    correos_recibidos?: CorreoOrderByRelationAggregateInput
    direcciones_favoritas?: Direccion_FavoritaOrderByRelationAggregateInput
    correos_bloqueados?: Correo_BloqueadoOrderByRelationAggregateInput
    contactos?: ContactoOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id_usuario?: number
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    direccion_correo?: StringFilter<"Usuario"> | string
    descripcion?: StringNullableFilter<"Usuario"> | string | null
    nombre?: StringNullableFilter<"Usuario"> | string | null
    clave?: StringNullableFilter<"Usuario"> | string | null
    correos_enviados?: CorreoListRelationFilter
    correos_recibidos?: CorreoListRelationFilter
    direcciones_favoritas?: Direccion_FavoritaListRelationFilter
    correos_bloqueados?: Correo_BloqueadoListRelationFilter
    contactos?: ContactoListRelationFilter
  }, "id_usuario">

  export type UsuarioOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    direccion_correo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    nombre?: SortOrderInput | SortOrder
    clave?: SortOrderInput | SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id_usuario?: IntWithAggregatesFilter<"Usuario"> | number
    direccion_correo?: StringWithAggregatesFilter<"Usuario"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    nombre?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    clave?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
  }

  export type CorreoWhereInput = {
    AND?: CorreoWhereInput | CorreoWhereInput[]
    OR?: CorreoWhereInput[]
    NOT?: CorreoWhereInput | CorreoWhereInput[]
    correo_id?: IntFilter<"Correo"> | number
    remitente_id?: IntFilter<"Correo"> | number
    destinatario_id?: IntFilter<"Correo"> | number
    asunto?: StringNullableFilter<"Correo"> | string | null
    cuerpo?: StringNullableFilter<"Correo"> | string | null
    es_favorito?: BoolNullableFilter<"Correo"> | boolean | null
    remitente?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    destinatario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type CorreoOrderByWithRelationInput = {
    correo_id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
    asunto?: SortOrderInput | SortOrder
    cuerpo?: SortOrderInput | SortOrder
    es_favorito?: SortOrderInput | SortOrder
    remitente?: UsuarioOrderByWithRelationInput
    destinatario?: UsuarioOrderByWithRelationInput
  }

  export type CorreoWhereUniqueInput = Prisma.AtLeast<{
    correo_id?: number
    AND?: CorreoWhereInput | CorreoWhereInput[]
    OR?: CorreoWhereInput[]
    NOT?: CorreoWhereInput | CorreoWhereInput[]
    remitente_id?: IntFilter<"Correo"> | number
    destinatario_id?: IntFilter<"Correo"> | number
    asunto?: StringNullableFilter<"Correo"> | string | null
    cuerpo?: StringNullableFilter<"Correo"> | string | null
    es_favorito?: BoolNullableFilter<"Correo"> | boolean | null
    remitente?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    destinatario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "correo_id">

  export type CorreoOrderByWithAggregationInput = {
    correo_id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
    asunto?: SortOrderInput | SortOrder
    cuerpo?: SortOrderInput | SortOrder
    es_favorito?: SortOrderInput | SortOrder
    _count?: CorreoCountOrderByAggregateInput
    _avg?: CorreoAvgOrderByAggregateInput
    _max?: CorreoMaxOrderByAggregateInput
    _min?: CorreoMinOrderByAggregateInput
    _sum?: CorreoSumOrderByAggregateInput
  }

  export type CorreoScalarWhereWithAggregatesInput = {
    AND?: CorreoScalarWhereWithAggregatesInput | CorreoScalarWhereWithAggregatesInput[]
    OR?: CorreoScalarWhereWithAggregatesInput[]
    NOT?: CorreoScalarWhereWithAggregatesInput | CorreoScalarWhereWithAggregatesInput[]
    correo_id?: IntWithAggregatesFilter<"Correo"> | number
    remitente_id?: IntWithAggregatesFilter<"Correo"> | number
    destinatario_id?: IntWithAggregatesFilter<"Correo"> | number
    asunto?: StringNullableWithAggregatesFilter<"Correo"> | string | null
    cuerpo?: StringNullableWithAggregatesFilter<"Correo"> | string | null
    es_favorito?: BoolNullableWithAggregatesFilter<"Correo"> | boolean | null
  }

  export type Direccion_FavoritaWhereInput = {
    AND?: Direccion_FavoritaWhereInput | Direccion_FavoritaWhereInput[]
    OR?: Direccion_FavoritaWhereInput[]
    NOT?: Direccion_FavoritaWhereInput | Direccion_FavoritaWhereInput[]
    id_direccion?: IntFilter<"Direccion_Favorita"> | number
    usuario_id?: IntFilter<"Direccion_Favorita"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type Direccion_FavoritaOrderByWithRelationInput = {
    id_direccion?: SortOrder
    usuario_id?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type Direccion_FavoritaWhereUniqueInput = Prisma.AtLeast<{
    id_direccion?: number
    AND?: Direccion_FavoritaWhereInput | Direccion_FavoritaWhereInput[]
    OR?: Direccion_FavoritaWhereInput[]
    NOT?: Direccion_FavoritaWhereInput | Direccion_FavoritaWhereInput[]
    usuario_id?: IntFilter<"Direccion_Favorita"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id_direccion">

  export type Direccion_FavoritaOrderByWithAggregationInput = {
    id_direccion?: SortOrder
    usuario_id?: SortOrder
    _count?: Direccion_FavoritaCountOrderByAggregateInput
    _avg?: Direccion_FavoritaAvgOrderByAggregateInput
    _max?: Direccion_FavoritaMaxOrderByAggregateInput
    _min?: Direccion_FavoritaMinOrderByAggregateInput
    _sum?: Direccion_FavoritaSumOrderByAggregateInput
  }

  export type Direccion_FavoritaScalarWhereWithAggregatesInput = {
    AND?: Direccion_FavoritaScalarWhereWithAggregatesInput | Direccion_FavoritaScalarWhereWithAggregatesInput[]
    OR?: Direccion_FavoritaScalarWhereWithAggregatesInput[]
    NOT?: Direccion_FavoritaScalarWhereWithAggregatesInput | Direccion_FavoritaScalarWhereWithAggregatesInput[]
    id_direccion?: IntWithAggregatesFilter<"Direccion_Favorita"> | number
    usuario_id?: IntWithAggregatesFilter<"Direccion_Favorita"> | number
  }

  export type ContactoWhereInput = {
    AND?: ContactoWhereInput | ContactoWhereInput[]
    OR?: ContactoWhereInput[]
    NOT?: ContactoWhereInput | ContactoWhereInput[]
    id?: IntFilter<"Contacto"> | number
    direccion_correo?: StringFilter<"Contacto"> | string
    nombre?: StringFilter<"Contacto"> | string
    usuario_id?: IntFilter<"Contacto"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type ContactoOrderByWithRelationInput = {
    id?: SortOrder
    direccion_correo?: SortOrder
    nombre?: SortOrder
    usuario_id?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type ContactoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ContactoWhereInput | ContactoWhereInput[]
    OR?: ContactoWhereInput[]
    NOT?: ContactoWhereInput | ContactoWhereInput[]
    direccion_correo?: StringFilter<"Contacto"> | string
    nombre?: StringFilter<"Contacto"> | string
    usuario_id?: IntFilter<"Contacto"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id">

  export type ContactoOrderByWithAggregationInput = {
    id?: SortOrder
    direccion_correo?: SortOrder
    nombre?: SortOrder
    usuario_id?: SortOrder
    _count?: ContactoCountOrderByAggregateInput
    _avg?: ContactoAvgOrderByAggregateInput
    _max?: ContactoMaxOrderByAggregateInput
    _min?: ContactoMinOrderByAggregateInput
    _sum?: ContactoSumOrderByAggregateInput
  }

  export type ContactoScalarWhereWithAggregatesInput = {
    AND?: ContactoScalarWhereWithAggregatesInput | ContactoScalarWhereWithAggregatesInput[]
    OR?: ContactoScalarWhereWithAggregatesInput[]
    NOT?: ContactoScalarWhereWithAggregatesInput | ContactoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Contacto"> | number
    direccion_correo?: StringWithAggregatesFilter<"Contacto"> | string
    nombre?: StringWithAggregatesFilter<"Contacto"> | string
    usuario_id?: IntWithAggregatesFilter<"Contacto"> | number
  }

  export type Correo_BloqueadoWhereInput = {
    AND?: Correo_BloqueadoWhereInput | Correo_BloqueadoWhereInput[]
    OR?: Correo_BloqueadoWhereInput[]
    NOT?: Correo_BloqueadoWhereInput | Correo_BloqueadoWhereInput[]
    correo_bloqueado_id?: IntFilter<"Correo_Bloqueado"> | number
    usuario_id?: IntFilter<"Correo_Bloqueado"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type Correo_BloqueadoOrderByWithRelationInput = {
    correo_bloqueado_id?: SortOrder
    usuario_id?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type Correo_BloqueadoWhereUniqueInput = Prisma.AtLeast<{
    correo_bloqueado_id?: number
    AND?: Correo_BloqueadoWhereInput | Correo_BloqueadoWhereInput[]
    OR?: Correo_BloqueadoWhereInput[]
    NOT?: Correo_BloqueadoWhereInput | Correo_BloqueadoWhereInput[]
    usuario_id?: IntFilter<"Correo_Bloqueado"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "correo_bloqueado_id">

  export type Correo_BloqueadoOrderByWithAggregationInput = {
    correo_bloqueado_id?: SortOrder
    usuario_id?: SortOrder
    _count?: Correo_BloqueadoCountOrderByAggregateInput
    _avg?: Correo_BloqueadoAvgOrderByAggregateInput
    _max?: Correo_BloqueadoMaxOrderByAggregateInput
    _min?: Correo_BloqueadoMinOrderByAggregateInput
    _sum?: Correo_BloqueadoSumOrderByAggregateInput
  }

  export type Correo_BloqueadoScalarWhereWithAggregatesInput = {
    AND?: Correo_BloqueadoScalarWhereWithAggregatesInput | Correo_BloqueadoScalarWhereWithAggregatesInput[]
    OR?: Correo_BloqueadoScalarWhereWithAggregatesInput[]
    NOT?: Correo_BloqueadoScalarWhereWithAggregatesInput | Correo_BloqueadoScalarWhereWithAggregatesInput[]
    correo_bloqueado_id?: IntWithAggregatesFilter<"Correo_Bloqueado"> | number
    usuario_id?: IntWithAggregatesFilter<"Correo_Bloqueado"> | number
  }

  export type UsuarioCreateInput = {
    direccion_correo: string
    descripcion?: string | null
    nombre?: string | null
    clave?: string | null
    correos_enviados?: CorreoCreateNestedManyWithoutRemitenteInput
    correos_recibidos?: CorreoCreateNestedManyWithoutDestinatarioInput
    direcciones_favoritas?: Direccion_FavoritaCreateNestedManyWithoutUsuarioInput
    correos_bloqueados?: Correo_BloqueadoCreateNestedManyWithoutUsuarioInput
    contactos?: ContactoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id_usuario?: number
    direccion_correo: string
    descripcion?: string | null
    nombre?: string | null
    clave?: string | null
    correos_enviados?: CorreoUncheckedCreateNestedManyWithoutRemitenteInput
    correos_recibidos?: CorreoUncheckedCreateNestedManyWithoutDestinatarioInput
    direcciones_favoritas?: Direccion_FavoritaUncheckedCreateNestedManyWithoutUsuarioInput
    correos_bloqueados?: Correo_BloqueadoUncheckedCreateNestedManyWithoutUsuarioInput
    contactos?: ContactoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    correos_enviados?: CorreoUpdateManyWithoutRemitenteNestedInput
    correos_recibidos?: CorreoUpdateManyWithoutDestinatarioNestedInput
    direcciones_favoritas?: Direccion_FavoritaUpdateManyWithoutUsuarioNestedInput
    correos_bloqueados?: Correo_BloqueadoUpdateManyWithoutUsuarioNestedInput
    contactos?: ContactoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    correos_enviados?: CorreoUncheckedUpdateManyWithoutRemitenteNestedInput
    correos_recibidos?: CorreoUncheckedUpdateManyWithoutDestinatarioNestedInput
    direcciones_favoritas?: Direccion_FavoritaUncheckedUpdateManyWithoutUsuarioNestedInput
    correos_bloqueados?: Correo_BloqueadoUncheckedUpdateManyWithoutUsuarioNestedInput
    contactos?: ContactoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id_usuario?: number
    direccion_correo: string
    descripcion?: string | null
    nombre?: string | null
    clave?: string | null
  }

  export type UsuarioUpdateManyMutationInput = {
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CorreoCreateInput = {
    asunto?: string | null
    cuerpo?: string | null
    es_favorito?: boolean | null
    remitente: UsuarioCreateNestedOneWithoutCorreos_enviadosInput
    destinatario: UsuarioCreateNestedOneWithoutCorreos_recibidosInput
  }

  export type CorreoUncheckedCreateInput = {
    correo_id?: number
    remitente_id: number
    destinatario_id: number
    asunto?: string | null
    cuerpo?: string | null
    es_favorito?: boolean | null
  }

  export type CorreoUpdateInput = {
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    es_favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    remitente?: UsuarioUpdateOneRequiredWithoutCorreos_enviadosNestedInput
    destinatario?: UsuarioUpdateOneRequiredWithoutCorreos_recibidosNestedInput
  }

  export type CorreoUncheckedUpdateInput = {
    correo_id?: IntFieldUpdateOperationsInput | number
    remitente_id?: IntFieldUpdateOperationsInput | number
    destinatario_id?: IntFieldUpdateOperationsInput | number
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    es_favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type CorreoCreateManyInput = {
    correo_id?: number
    remitente_id: number
    destinatario_id: number
    asunto?: string | null
    cuerpo?: string | null
    es_favorito?: boolean | null
  }

  export type CorreoUpdateManyMutationInput = {
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    es_favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type CorreoUncheckedUpdateManyInput = {
    correo_id?: IntFieldUpdateOperationsInput | number
    remitente_id?: IntFieldUpdateOperationsInput | number
    destinatario_id?: IntFieldUpdateOperationsInput | number
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    es_favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Direccion_FavoritaCreateInput = {
    usuario: UsuarioCreateNestedOneWithoutDirecciones_favoritasInput
  }

  export type Direccion_FavoritaUncheckedCreateInput = {
    id_direccion?: number
    usuario_id: number
  }

  export type Direccion_FavoritaUpdateInput = {
    usuario?: UsuarioUpdateOneRequiredWithoutDirecciones_favoritasNestedInput
  }

  export type Direccion_FavoritaUncheckedUpdateInput = {
    id_direccion?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
  }

  export type Direccion_FavoritaCreateManyInput = {
    id_direccion?: number
    usuario_id: number
  }

  export type Direccion_FavoritaUpdateManyMutationInput = {

  }

  export type Direccion_FavoritaUncheckedUpdateManyInput = {
    id_direccion?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
  }

  export type ContactoCreateInput = {
    direccion_correo: string
    nombre: string
    usuario: UsuarioCreateNestedOneWithoutContactosInput
  }

  export type ContactoUncheckedCreateInput = {
    id?: number
    direccion_correo: string
    nombre: string
    usuario_id: number
  }

  export type ContactoUpdateInput = {
    direccion_correo?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUpdateOneRequiredWithoutContactosNestedInput
  }

  export type ContactoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    direccion_correo?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    usuario_id?: IntFieldUpdateOperationsInput | number
  }

  export type ContactoCreateManyInput = {
    id?: number
    direccion_correo: string
    nombre: string
    usuario_id: number
  }

  export type ContactoUpdateManyMutationInput = {
    direccion_correo?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ContactoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    direccion_correo?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    usuario_id?: IntFieldUpdateOperationsInput | number
  }

  export type Correo_BloqueadoCreateInput = {
    usuario: UsuarioCreateNestedOneWithoutCorreos_bloqueadosInput
  }

  export type Correo_BloqueadoUncheckedCreateInput = {
    correo_bloqueado_id?: number
    usuario_id: number
  }

  export type Correo_BloqueadoUpdateInput = {
    usuario?: UsuarioUpdateOneRequiredWithoutCorreos_bloqueadosNestedInput
  }

  export type Correo_BloqueadoUncheckedUpdateInput = {
    correo_bloqueado_id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
  }

  export type Correo_BloqueadoCreateManyInput = {
    correo_bloqueado_id?: number
    usuario_id: number
  }

  export type Correo_BloqueadoUpdateManyMutationInput = {

  }

  export type Correo_BloqueadoUncheckedUpdateManyInput = {
    correo_bloqueado_id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type CorreoListRelationFilter = {
    every?: CorreoWhereInput
    some?: CorreoWhereInput
    none?: CorreoWhereInput
  }

  export type Direccion_FavoritaListRelationFilter = {
    every?: Direccion_FavoritaWhereInput
    some?: Direccion_FavoritaWhereInput
    none?: Direccion_FavoritaWhereInput
  }

  export type Correo_BloqueadoListRelationFilter = {
    every?: Correo_BloqueadoWhereInput
    some?: Correo_BloqueadoWhereInput
    none?: Correo_BloqueadoWhereInput
  }

  export type ContactoListRelationFilter = {
    every?: ContactoWhereInput
    some?: ContactoWhereInput
    none?: ContactoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CorreoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Direccion_FavoritaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Correo_BloqueadoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ContactoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    direccion_correo?: SortOrder
    descripcion?: SortOrder
    nombre?: SortOrder
    clave?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id_usuario?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    direccion_correo?: SortOrder
    descripcion?: SortOrder
    nombre?: SortOrder
    clave?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    direccion_correo?: SortOrder
    descripcion?: SortOrder
    nombre?: SortOrder
    clave?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id_usuario?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type UsuarioRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type CorreoCountOrderByAggregateInput = {
    correo_id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
    asunto?: SortOrder
    cuerpo?: SortOrder
    es_favorito?: SortOrder
  }

  export type CorreoAvgOrderByAggregateInput = {
    correo_id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
  }

  export type CorreoMaxOrderByAggregateInput = {
    correo_id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
    asunto?: SortOrder
    cuerpo?: SortOrder
    es_favorito?: SortOrder
  }

  export type CorreoMinOrderByAggregateInput = {
    correo_id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
    asunto?: SortOrder
    cuerpo?: SortOrder
    es_favorito?: SortOrder
  }

  export type CorreoSumOrderByAggregateInput = {
    correo_id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type Direccion_FavoritaCountOrderByAggregateInput = {
    id_direccion?: SortOrder
    usuario_id?: SortOrder
  }

  export type Direccion_FavoritaAvgOrderByAggregateInput = {
    id_direccion?: SortOrder
    usuario_id?: SortOrder
  }

  export type Direccion_FavoritaMaxOrderByAggregateInput = {
    id_direccion?: SortOrder
    usuario_id?: SortOrder
  }

  export type Direccion_FavoritaMinOrderByAggregateInput = {
    id_direccion?: SortOrder
    usuario_id?: SortOrder
  }

  export type Direccion_FavoritaSumOrderByAggregateInput = {
    id_direccion?: SortOrder
    usuario_id?: SortOrder
  }

  export type ContactoCountOrderByAggregateInput = {
    id?: SortOrder
    direccion_correo?: SortOrder
    nombre?: SortOrder
    usuario_id?: SortOrder
  }

  export type ContactoAvgOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
  }

  export type ContactoMaxOrderByAggregateInput = {
    id?: SortOrder
    direccion_correo?: SortOrder
    nombre?: SortOrder
    usuario_id?: SortOrder
  }

  export type ContactoMinOrderByAggregateInput = {
    id?: SortOrder
    direccion_correo?: SortOrder
    nombre?: SortOrder
    usuario_id?: SortOrder
  }

  export type ContactoSumOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
  }

  export type Correo_BloqueadoCountOrderByAggregateInput = {
    correo_bloqueado_id?: SortOrder
    usuario_id?: SortOrder
  }

  export type Correo_BloqueadoAvgOrderByAggregateInput = {
    correo_bloqueado_id?: SortOrder
    usuario_id?: SortOrder
  }

  export type Correo_BloqueadoMaxOrderByAggregateInput = {
    correo_bloqueado_id?: SortOrder
    usuario_id?: SortOrder
  }

  export type Correo_BloqueadoMinOrderByAggregateInput = {
    correo_bloqueado_id?: SortOrder
    usuario_id?: SortOrder
  }

  export type Correo_BloqueadoSumOrderByAggregateInput = {
    correo_bloqueado_id?: SortOrder
    usuario_id?: SortOrder
  }

  export type CorreoCreateNestedManyWithoutRemitenteInput = {
    create?: XOR<CorreoCreateWithoutRemitenteInput, CorreoUncheckedCreateWithoutRemitenteInput> | CorreoCreateWithoutRemitenteInput[] | CorreoUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutRemitenteInput | CorreoCreateOrConnectWithoutRemitenteInput[]
    createMany?: CorreoCreateManyRemitenteInputEnvelope
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
  }

  export type CorreoCreateNestedManyWithoutDestinatarioInput = {
    create?: XOR<CorreoCreateWithoutDestinatarioInput, CorreoUncheckedCreateWithoutDestinatarioInput> | CorreoCreateWithoutDestinatarioInput[] | CorreoUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutDestinatarioInput | CorreoCreateOrConnectWithoutDestinatarioInput[]
    createMany?: CorreoCreateManyDestinatarioInputEnvelope
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
  }

  export type Direccion_FavoritaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<Direccion_FavoritaCreateWithoutUsuarioInput, Direccion_FavoritaUncheckedCreateWithoutUsuarioInput> | Direccion_FavoritaCreateWithoutUsuarioInput[] | Direccion_FavoritaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: Direccion_FavoritaCreateOrConnectWithoutUsuarioInput | Direccion_FavoritaCreateOrConnectWithoutUsuarioInput[]
    createMany?: Direccion_FavoritaCreateManyUsuarioInputEnvelope
    connect?: Direccion_FavoritaWhereUniqueInput | Direccion_FavoritaWhereUniqueInput[]
  }

  export type Correo_BloqueadoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<Correo_BloqueadoCreateWithoutUsuarioInput, Correo_BloqueadoUncheckedCreateWithoutUsuarioInput> | Correo_BloqueadoCreateWithoutUsuarioInput[] | Correo_BloqueadoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: Correo_BloqueadoCreateOrConnectWithoutUsuarioInput | Correo_BloqueadoCreateOrConnectWithoutUsuarioInput[]
    createMany?: Correo_BloqueadoCreateManyUsuarioInputEnvelope
    connect?: Correo_BloqueadoWhereUniqueInput | Correo_BloqueadoWhereUniqueInput[]
  }

  export type ContactoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ContactoCreateWithoutUsuarioInput, ContactoUncheckedCreateWithoutUsuarioInput> | ContactoCreateWithoutUsuarioInput[] | ContactoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ContactoCreateOrConnectWithoutUsuarioInput | ContactoCreateOrConnectWithoutUsuarioInput[]
    createMany?: ContactoCreateManyUsuarioInputEnvelope
    connect?: ContactoWhereUniqueInput | ContactoWhereUniqueInput[]
  }

  export type CorreoUncheckedCreateNestedManyWithoutRemitenteInput = {
    create?: XOR<CorreoCreateWithoutRemitenteInput, CorreoUncheckedCreateWithoutRemitenteInput> | CorreoCreateWithoutRemitenteInput[] | CorreoUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutRemitenteInput | CorreoCreateOrConnectWithoutRemitenteInput[]
    createMany?: CorreoCreateManyRemitenteInputEnvelope
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
  }

  export type CorreoUncheckedCreateNestedManyWithoutDestinatarioInput = {
    create?: XOR<CorreoCreateWithoutDestinatarioInput, CorreoUncheckedCreateWithoutDestinatarioInput> | CorreoCreateWithoutDestinatarioInput[] | CorreoUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutDestinatarioInput | CorreoCreateOrConnectWithoutDestinatarioInput[]
    createMany?: CorreoCreateManyDestinatarioInputEnvelope
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
  }

  export type Direccion_FavoritaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<Direccion_FavoritaCreateWithoutUsuarioInput, Direccion_FavoritaUncheckedCreateWithoutUsuarioInput> | Direccion_FavoritaCreateWithoutUsuarioInput[] | Direccion_FavoritaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: Direccion_FavoritaCreateOrConnectWithoutUsuarioInput | Direccion_FavoritaCreateOrConnectWithoutUsuarioInput[]
    createMany?: Direccion_FavoritaCreateManyUsuarioInputEnvelope
    connect?: Direccion_FavoritaWhereUniqueInput | Direccion_FavoritaWhereUniqueInput[]
  }

  export type Correo_BloqueadoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<Correo_BloqueadoCreateWithoutUsuarioInput, Correo_BloqueadoUncheckedCreateWithoutUsuarioInput> | Correo_BloqueadoCreateWithoutUsuarioInput[] | Correo_BloqueadoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: Correo_BloqueadoCreateOrConnectWithoutUsuarioInput | Correo_BloqueadoCreateOrConnectWithoutUsuarioInput[]
    createMany?: Correo_BloqueadoCreateManyUsuarioInputEnvelope
    connect?: Correo_BloqueadoWhereUniqueInput | Correo_BloqueadoWhereUniqueInput[]
  }

  export type ContactoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ContactoCreateWithoutUsuarioInput, ContactoUncheckedCreateWithoutUsuarioInput> | ContactoCreateWithoutUsuarioInput[] | ContactoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ContactoCreateOrConnectWithoutUsuarioInput | ContactoCreateOrConnectWithoutUsuarioInput[]
    createMany?: ContactoCreateManyUsuarioInputEnvelope
    connect?: ContactoWhereUniqueInput | ContactoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type CorreoUpdateManyWithoutRemitenteNestedInput = {
    create?: XOR<CorreoCreateWithoutRemitenteInput, CorreoUncheckedCreateWithoutRemitenteInput> | CorreoCreateWithoutRemitenteInput[] | CorreoUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutRemitenteInput | CorreoCreateOrConnectWithoutRemitenteInput[]
    upsert?: CorreoUpsertWithWhereUniqueWithoutRemitenteInput | CorreoUpsertWithWhereUniqueWithoutRemitenteInput[]
    createMany?: CorreoCreateManyRemitenteInputEnvelope
    set?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    disconnect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    delete?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    update?: CorreoUpdateWithWhereUniqueWithoutRemitenteInput | CorreoUpdateWithWhereUniqueWithoutRemitenteInput[]
    updateMany?: CorreoUpdateManyWithWhereWithoutRemitenteInput | CorreoUpdateManyWithWhereWithoutRemitenteInput[]
    deleteMany?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
  }

  export type CorreoUpdateManyWithoutDestinatarioNestedInput = {
    create?: XOR<CorreoCreateWithoutDestinatarioInput, CorreoUncheckedCreateWithoutDestinatarioInput> | CorreoCreateWithoutDestinatarioInput[] | CorreoUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutDestinatarioInput | CorreoCreateOrConnectWithoutDestinatarioInput[]
    upsert?: CorreoUpsertWithWhereUniqueWithoutDestinatarioInput | CorreoUpsertWithWhereUniqueWithoutDestinatarioInput[]
    createMany?: CorreoCreateManyDestinatarioInputEnvelope
    set?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    disconnect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    delete?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    update?: CorreoUpdateWithWhereUniqueWithoutDestinatarioInput | CorreoUpdateWithWhereUniqueWithoutDestinatarioInput[]
    updateMany?: CorreoUpdateManyWithWhereWithoutDestinatarioInput | CorreoUpdateManyWithWhereWithoutDestinatarioInput[]
    deleteMany?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
  }

  export type Direccion_FavoritaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<Direccion_FavoritaCreateWithoutUsuarioInput, Direccion_FavoritaUncheckedCreateWithoutUsuarioInput> | Direccion_FavoritaCreateWithoutUsuarioInput[] | Direccion_FavoritaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: Direccion_FavoritaCreateOrConnectWithoutUsuarioInput | Direccion_FavoritaCreateOrConnectWithoutUsuarioInput[]
    upsert?: Direccion_FavoritaUpsertWithWhereUniqueWithoutUsuarioInput | Direccion_FavoritaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: Direccion_FavoritaCreateManyUsuarioInputEnvelope
    set?: Direccion_FavoritaWhereUniqueInput | Direccion_FavoritaWhereUniqueInput[]
    disconnect?: Direccion_FavoritaWhereUniqueInput | Direccion_FavoritaWhereUniqueInput[]
    delete?: Direccion_FavoritaWhereUniqueInput | Direccion_FavoritaWhereUniqueInput[]
    connect?: Direccion_FavoritaWhereUniqueInput | Direccion_FavoritaWhereUniqueInput[]
    update?: Direccion_FavoritaUpdateWithWhereUniqueWithoutUsuarioInput | Direccion_FavoritaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: Direccion_FavoritaUpdateManyWithWhereWithoutUsuarioInput | Direccion_FavoritaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: Direccion_FavoritaScalarWhereInput | Direccion_FavoritaScalarWhereInput[]
  }

  export type Correo_BloqueadoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<Correo_BloqueadoCreateWithoutUsuarioInput, Correo_BloqueadoUncheckedCreateWithoutUsuarioInput> | Correo_BloqueadoCreateWithoutUsuarioInput[] | Correo_BloqueadoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: Correo_BloqueadoCreateOrConnectWithoutUsuarioInput | Correo_BloqueadoCreateOrConnectWithoutUsuarioInput[]
    upsert?: Correo_BloqueadoUpsertWithWhereUniqueWithoutUsuarioInput | Correo_BloqueadoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: Correo_BloqueadoCreateManyUsuarioInputEnvelope
    set?: Correo_BloqueadoWhereUniqueInput | Correo_BloqueadoWhereUniqueInput[]
    disconnect?: Correo_BloqueadoWhereUniqueInput | Correo_BloqueadoWhereUniqueInput[]
    delete?: Correo_BloqueadoWhereUniqueInput | Correo_BloqueadoWhereUniqueInput[]
    connect?: Correo_BloqueadoWhereUniqueInput | Correo_BloqueadoWhereUniqueInput[]
    update?: Correo_BloqueadoUpdateWithWhereUniqueWithoutUsuarioInput | Correo_BloqueadoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: Correo_BloqueadoUpdateManyWithWhereWithoutUsuarioInput | Correo_BloqueadoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: Correo_BloqueadoScalarWhereInput | Correo_BloqueadoScalarWhereInput[]
  }

  export type ContactoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ContactoCreateWithoutUsuarioInput, ContactoUncheckedCreateWithoutUsuarioInput> | ContactoCreateWithoutUsuarioInput[] | ContactoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ContactoCreateOrConnectWithoutUsuarioInput | ContactoCreateOrConnectWithoutUsuarioInput[]
    upsert?: ContactoUpsertWithWhereUniqueWithoutUsuarioInput | ContactoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ContactoCreateManyUsuarioInputEnvelope
    set?: ContactoWhereUniqueInput | ContactoWhereUniqueInput[]
    disconnect?: ContactoWhereUniqueInput | ContactoWhereUniqueInput[]
    delete?: ContactoWhereUniqueInput | ContactoWhereUniqueInput[]
    connect?: ContactoWhereUniqueInput | ContactoWhereUniqueInput[]
    update?: ContactoUpdateWithWhereUniqueWithoutUsuarioInput | ContactoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ContactoUpdateManyWithWhereWithoutUsuarioInput | ContactoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ContactoScalarWhereInput | ContactoScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CorreoUncheckedUpdateManyWithoutRemitenteNestedInput = {
    create?: XOR<CorreoCreateWithoutRemitenteInput, CorreoUncheckedCreateWithoutRemitenteInput> | CorreoCreateWithoutRemitenteInput[] | CorreoUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutRemitenteInput | CorreoCreateOrConnectWithoutRemitenteInput[]
    upsert?: CorreoUpsertWithWhereUniqueWithoutRemitenteInput | CorreoUpsertWithWhereUniqueWithoutRemitenteInput[]
    createMany?: CorreoCreateManyRemitenteInputEnvelope
    set?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    disconnect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    delete?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    update?: CorreoUpdateWithWhereUniqueWithoutRemitenteInput | CorreoUpdateWithWhereUniqueWithoutRemitenteInput[]
    updateMany?: CorreoUpdateManyWithWhereWithoutRemitenteInput | CorreoUpdateManyWithWhereWithoutRemitenteInput[]
    deleteMany?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
  }

  export type CorreoUncheckedUpdateManyWithoutDestinatarioNestedInput = {
    create?: XOR<CorreoCreateWithoutDestinatarioInput, CorreoUncheckedCreateWithoutDestinatarioInput> | CorreoCreateWithoutDestinatarioInput[] | CorreoUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: CorreoCreateOrConnectWithoutDestinatarioInput | CorreoCreateOrConnectWithoutDestinatarioInput[]
    upsert?: CorreoUpsertWithWhereUniqueWithoutDestinatarioInput | CorreoUpsertWithWhereUniqueWithoutDestinatarioInput[]
    createMany?: CorreoCreateManyDestinatarioInputEnvelope
    set?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    disconnect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    delete?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    connect?: CorreoWhereUniqueInput | CorreoWhereUniqueInput[]
    update?: CorreoUpdateWithWhereUniqueWithoutDestinatarioInput | CorreoUpdateWithWhereUniqueWithoutDestinatarioInput[]
    updateMany?: CorreoUpdateManyWithWhereWithoutDestinatarioInput | CorreoUpdateManyWithWhereWithoutDestinatarioInput[]
    deleteMany?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
  }

  export type Direccion_FavoritaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<Direccion_FavoritaCreateWithoutUsuarioInput, Direccion_FavoritaUncheckedCreateWithoutUsuarioInput> | Direccion_FavoritaCreateWithoutUsuarioInput[] | Direccion_FavoritaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: Direccion_FavoritaCreateOrConnectWithoutUsuarioInput | Direccion_FavoritaCreateOrConnectWithoutUsuarioInput[]
    upsert?: Direccion_FavoritaUpsertWithWhereUniqueWithoutUsuarioInput | Direccion_FavoritaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: Direccion_FavoritaCreateManyUsuarioInputEnvelope
    set?: Direccion_FavoritaWhereUniqueInput | Direccion_FavoritaWhereUniqueInput[]
    disconnect?: Direccion_FavoritaWhereUniqueInput | Direccion_FavoritaWhereUniqueInput[]
    delete?: Direccion_FavoritaWhereUniqueInput | Direccion_FavoritaWhereUniqueInput[]
    connect?: Direccion_FavoritaWhereUniqueInput | Direccion_FavoritaWhereUniqueInput[]
    update?: Direccion_FavoritaUpdateWithWhereUniqueWithoutUsuarioInput | Direccion_FavoritaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: Direccion_FavoritaUpdateManyWithWhereWithoutUsuarioInput | Direccion_FavoritaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: Direccion_FavoritaScalarWhereInput | Direccion_FavoritaScalarWhereInput[]
  }

  export type Correo_BloqueadoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<Correo_BloqueadoCreateWithoutUsuarioInput, Correo_BloqueadoUncheckedCreateWithoutUsuarioInput> | Correo_BloqueadoCreateWithoutUsuarioInput[] | Correo_BloqueadoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: Correo_BloqueadoCreateOrConnectWithoutUsuarioInput | Correo_BloqueadoCreateOrConnectWithoutUsuarioInput[]
    upsert?: Correo_BloqueadoUpsertWithWhereUniqueWithoutUsuarioInput | Correo_BloqueadoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: Correo_BloqueadoCreateManyUsuarioInputEnvelope
    set?: Correo_BloqueadoWhereUniqueInput | Correo_BloqueadoWhereUniqueInput[]
    disconnect?: Correo_BloqueadoWhereUniqueInput | Correo_BloqueadoWhereUniqueInput[]
    delete?: Correo_BloqueadoWhereUniqueInput | Correo_BloqueadoWhereUniqueInput[]
    connect?: Correo_BloqueadoWhereUniqueInput | Correo_BloqueadoWhereUniqueInput[]
    update?: Correo_BloqueadoUpdateWithWhereUniqueWithoutUsuarioInput | Correo_BloqueadoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: Correo_BloqueadoUpdateManyWithWhereWithoutUsuarioInput | Correo_BloqueadoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: Correo_BloqueadoScalarWhereInput | Correo_BloqueadoScalarWhereInput[]
  }

  export type ContactoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ContactoCreateWithoutUsuarioInput, ContactoUncheckedCreateWithoutUsuarioInput> | ContactoCreateWithoutUsuarioInput[] | ContactoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ContactoCreateOrConnectWithoutUsuarioInput | ContactoCreateOrConnectWithoutUsuarioInput[]
    upsert?: ContactoUpsertWithWhereUniqueWithoutUsuarioInput | ContactoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ContactoCreateManyUsuarioInputEnvelope
    set?: ContactoWhereUniqueInput | ContactoWhereUniqueInput[]
    disconnect?: ContactoWhereUniqueInput | ContactoWhereUniqueInput[]
    delete?: ContactoWhereUniqueInput | ContactoWhereUniqueInput[]
    connect?: ContactoWhereUniqueInput | ContactoWhereUniqueInput[]
    update?: ContactoUpdateWithWhereUniqueWithoutUsuarioInput | ContactoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ContactoUpdateManyWithWhereWithoutUsuarioInput | ContactoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ContactoScalarWhereInput | ContactoScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutCorreos_enviadosInput = {
    create?: XOR<UsuarioCreateWithoutCorreos_enviadosInput, UsuarioUncheckedCreateWithoutCorreos_enviadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreos_enviadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutCorreos_recibidosInput = {
    create?: XOR<UsuarioCreateWithoutCorreos_recibidosInput, UsuarioUncheckedCreateWithoutCorreos_recibidosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreos_recibidosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type UsuarioUpdateOneRequiredWithoutCorreos_enviadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutCorreos_enviadosInput, UsuarioUncheckedCreateWithoutCorreos_enviadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreos_enviadosInput
    upsert?: UsuarioUpsertWithoutCorreos_enviadosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCorreos_enviadosInput, UsuarioUpdateWithoutCorreos_enviadosInput>, UsuarioUncheckedUpdateWithoutCorreos_enviadosInput>
  }

  export type UsuarioUpdateOneRequiredWithoutCorreos_recibidosNestedInput = {
    create?: XOR<UsuarioCreateWithoutCorreos_recibidosInput, UsuarioUncheckedCreateWithoutCorreos_recibidosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreos_recibidosInput
    upsert?: UsuarioUpsertWithoutCorreos_recibidosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCorreos_recibidosInput, UsuarioUpdateWithoutCorreos_recibidosInput>, UsuarioUncheckedUpdateWithoutCorreos_recibidosInput>
  }

  export type UsuarioCreateNestedOneWithoutDirecciones_favoritasInput = {
    create?: XOR<UsuarioCreateWithoutDirecciones_favoritasInput, UsuarioUncheckedCreateWithoutDirecciones_favoritasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDirecciones_favoritasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutDirecciones_favoritasNestedInput = {
    create?: XOR<UsuarioCreateWithoutDirecciones_favoritasInput, UsuarioUncheckedCreateWithoutDirecciones_favoritasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDirecciones_favoritasInput
    upsert?: UsuarioUpsertWithoutDirecciones_favoritasInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutDirecciones_favoritasInput, UsuarioUpdateWithoutDirecciones_favoritasInput>, UsuarioUncheckedUpdateWithoutDirecciones_favoritasInput>
  }

  export type UsuarioCreateNestedOneWithoutContactosInput = {
    create?: XOR<UsuarioCreateWithoutContactosInput, UsuarioUncheckedCreateWithoutContactosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutContactosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutContactosNestedInput = {
    create?: XOR<UsuarioCreateWithoutContactosInput, UsuarioUncheckedCreateWithoutContactosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutContactosInput
    upsert?: UsuarioUpsertWithoutContactosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutContactosInput, UsuarioUpdateWithoutContactosInput>, UsuarioUncheckedUpdateWithoutContactosInput>
  }

  export type UsuarioCreateNestedOneWithoutCorreos_bloqueadosInput = {
    create?: XOR<UsuarioCreateWithoutCorreos_bloqueadosInput, UsuarioUncheckedCreateWithoutCorreos_bloqueadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreos_bloqueadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutCorreos_bloqueadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutCorreos_bloqueadosInput, UsuarioUncheckedCreateWithoutCorreos_bloqueadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreos_bloqueadosInput
    upsert?: UsuarioUpsertWithoutCorreos_bloqueadosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCorreos_bloqueadosInput, UsuarioUpdateWithoutCorreos_bloqueadosInput>, UsuarioUncheckedUpdateWithoutCorreos_bloqueadosInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type CorreoCreateWithoutRemitenteInput = {
    asunto?: string | null
    cuerpo?: string | null
    es_favorito?: boolean | null
    destinatario: UsuarioCreateNestedOneWithoutCorreos_recibidosInput
  }

  export type CorreoUncheckedCreateWithoutRemitenteInput = {
    correo_id?: number
    destinatario_id: number
    asunto?: string | null
    cuerpo?: string | null
    es_favorito?: boolean | null
  }

  export type CorreoCreateOrConnectWithoutRemitenteInput = {
    where: CorreoWhereUniqueInput
    create: XOR<CorreoCreateWithoutRemitenteInput, CorreoUncheckedCreateWithoutRemitenteInput>
  }

  export type CorreoCreateManyRemitenteInputEnvelope = {
    data: CorreoCreateManyRemitenteInput | CorreoCreateManyRemitenteInput[]
    skipDuplicates?: boolean
  }

  export type CorreoCreateWithoutDestinatarioInput = {
    asunto?: string | null
    cuerpo?: string | null
    es_favorito?: boolean | null
    remitente: UsuarioCreateNestedOneWithoutCorreos_enviadosInput
  }

  export type CorreoUncheckedCreateWithoutDestinatarioInput = {
    correo_id?: number
    remitente_id: number
    asunto?: string | null
    cuerpo?: string | null
    es_favorito?: boolean | null
  }

  export type CorreoCreateOrConnectWithoutDestinatarioInput = {
    where: CorreoWhereUniqueInput
    create: XOR<CorreoCreateWithoutDestinatarioInput, CorreoUncheckedCreateWithoutDestinatarioInput>
  }

  export type CorreoCreateManyDestinatarioInputEnvelope = {
    data: CorreoCreateManyDestinatarioInput | CorreoCreateManyDestinatarioInput[]
    skipDuplicates?: boolean
  }

  export type Direccion_FavoritaCreateWithoutUsuarioInput = {

  }

  export type Direccion_FavoritaUncheckedCreateWithoutUsuarioInput = {
    id_direccion?: number
  }

  export type Direccion_FavoritaCreateOrConnectWithoutUsuarioInput = {
    where: Direccion_FavoritaWhereUniqueInput
    create: XOR<Direccion_FavoritaCreateWithoutUsuarioInput, Direccion_FavoritaUncheckedCreateWithoutUsuarioInput>
  }

  export type Direccion_FavoritaCreateManyUsuarioInputEnvelope = {
    data: Direccion_FavoritaCreateManyUsuarioInput | Direccion_FavoritaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type Correo_BloqueadoCreateWithoutUsuarioInput = {

  }

  export type Correo_BloqueadoUncheckedCreateWithoutUsuarioInput = {
    correo_bloqueado_id?: number
  }

  export type Correo_BloqueadoCreateOrConnectWithoutUsuarioInput = {
    where: Correo_BloqueadoWhereUniqueInput
    create: XOR<Correo_BloqueadoCreateWithoutUsuarioInput, Correo_BloqueadoUncheckedCreateWithoutUsuarioInput>
  }

  export type Correo_BloqueadoCreateManyUsuarioInputEnvelope = {
    data: Correo_BloqueadoCreateManyUsuarioInput | Correo_BloqueadoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type ContactoCreateWithoutUsuarioInput = {
    direccion_correo: string
    nombre: string
  }

  export type ContactoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    direccion_correo: string
    nombre: string
  }

  export type ContactoCreateOrConnectWithoutUsuarioInput = {
    where: ContactoWhereUniqueInput
    create: XOR<ContactoCreateWithoutUsuarioInput, ContactoUncheckedCreateWithoutUsuarioInput>
  }

  export type ContactoCreateManyUsuarioInputEnvelope = {
    data: ContactoCreateManyUsuarioInput | ContactoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type CorreoUpsertWithWhereUniqueWithoutRemitenteInput = {
    where: CorreoWhereUniqueInput
    update: XOR<CorreoUpdateWithoutRemitenteInput, CorreoUncheckedUpdateWithoutRemitenteInput>
    create: XOR<CorreoCreateWithoutRemitenteInput, CorreoUncheckedCreateWithoutRemitenteInput>
  }

  export type CorreoUpdateWithWhereUniqueWithoutRemitenteInput = {
    where: CorreoWhereUniqueInput
    data: XOR<CorreoUpdateWithoutRemitenteInput, CorreoUncheckedUpdateWithoutRemitenteInput>
  }

  export type CorreoUpdateManyWithWhereWithoutRemitenteInput = {
    where: CorreoScalarWhereInput
    data: XOR<CorreoUpdateManyMutationInput, CorreoUncheckedUpdateManyWithoutRemitenteInput>
  }

  export type CorreoScalarWhereInput = {
    AND?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
    OR?: CorreoScalarWhereInput[]
    NOT?: CorreoScalarWhereInput | CorreoScalarWhereInput[]
    correo_id?: IntFilter<"Correo"> | number
    remitente_id?: IntFilter<"Correo"> | number
    destinatario_id?: IntFilter<"Correo"> | number
    asunto?: StringNullableFilter<"Correo"> | string | null
    cuerpo?: StringNullableFilter<"Correo"> | string | null
    es_favorito?: BoolNullableFilter<"Correo"> | boolean | null
  }

  export type CorreoUpsertWithWhereUniqueWithoutDestinatarioInput = {
    where: CorreoWhereUniqueInput
    update: XOR<CorreoUpdateWithoutDestinatarioInput, CorreoUncheckedUpdateWithoutDestinatarioInput>
    create: XOR<CorreoCreateWithoutDestinatarioInput, CorreoUncheckedCreateWithoutDestinatarioInput>
  }

  export type CorreoUpdateWithWhereUniqueWithoutDestinatarioInput = {
    where: CorreoWhereUniqueInput
    data: XOR<CorreoUpdateWithoutDestinatarioInput, CorreoUncheckedUpdateWithoutDestinatarioInput>
  }

  export type CorreoUpdateManyWithWhereWithoutDestinatarioInput = {
    where: CorreoScalarWhereInput
    data: XOR<CorreoUpdateManyMutationInput, CorreoUncheckedUpdateManyWithoutDestinatarioInput>
  }

  export type Direccion_FavoritaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: Direccion_FavoritaWhereUniqueInput
    update: XOR<Direccion_FavoritaUpdateWithoutUsuarioInput, Direccion_FavoritaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<Direccion_FavoritaCreateWithoutUsuarioInput, Direccion_FavoritaUncheckedCreateWithoutUsuarioInput>
  }

  export type Direccion_FavoritaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: Direccion_FavoritaWhereUniqueInput
    data: XOR<Direccion_FavoritaUpdateWithoutUsuarioInput, Direccion_FavoritaUncheckedUpdateWithoutUsuarioInput>
  }

  export type Direccion_FavoritaUpdateManyWithWhereWithoutUsuarioInput = {
    where: Direccion_FavoritaScalarWhereInput
    data: XOR<Direccion_FavoritaUpdateManyMutationInput, Direccion_FavoritaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type Direccion_FavoritaScalarWhereInput = {
    AND?: Direccion_FavoritaScalarWhereInput | Direccion_FavoritaScalarWhereInput[]
    OR?: Direccion_FavoritaScalarWhereInput[]
    NOT?: Direccion_FavoritaScalarWhereInput | Direccion_FavoritaScalarWhereInput[]
    id_direccion?: IntFilter<"Direccion_Favorita"> | number
    usuario_id?: IntFilter<"Direccion_Favorita"> | number
  }

  export type Correo_BloqueadoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: Correo_BloqueadoWhereUniqueInput
    update: XOR<Correo_BloqueadoUpdateWithoutUsuarioInput, Correo_BloqueadoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<Correo_BloqueadoCreateWithoutUsuarioInput, Correo_BloqueadoUncheckedCreateWithoutUsuarioInput>
  }

  export type Correo_BloqueadoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: Correo_BloqueadoWhereUniqueInput
    data: XOR<Correo_BloqueadoUpdateWithoutUsuarioInput, Correo_BloqueadoUncheckedUpdateWithoutUsuarioInput>
  }

  export type Correo_BloqueadoUpdateManyWithWhereWithoutUsuarioInput = {
    where: Correo_BloqueadoScalarWhereInput
    data: XOR<Correo_BloqueadoUpdateManyMutationInput, Correo_BloqueadoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type Correo_BloqueadoScalarWhereInput = {
    AND?: Correo_BloqueadoScalarWhereInput | Correo_BloqueadoScalarWhereInput[]
    OR?: Correo_BloqueadoScalarWhereInput[]
    NOT?: Correo_BloqueadoScalarWhereInput | Correo_BloqueadoScalarWhereInput[]
    correo_bloqueado_id?: IntFilter<"Correo_Bloqueado"> | number
    usuario_id?: IntFilter<"Correo_Bloqueado"> | number
  }

  export type ContactoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: ContactoWhereUniqueInput
    update: XOR<ContactoUpdateWithoutUsuarioInput, ContactoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ContactoCreateWithoutUsuarioInput, ContactoUncheckedCreateWithoutUsuarioInput>
  }

  export type ContactoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: ContactoWhereUniqueInput
    data: XOR<ContactoUpdateWithoutUsuarioInput, ContactoUncheckedUpdateWithoutUsuarioInput>
  }

  export type ContactoUpdateManyWithWhereWithoutUsuarioInput = {
    where: ContactoScalarWhereInput
    data: XOR<ContactoUpdateManyMutationInput, ContactoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type ContactoScalarWhereInput = {
    AND?: ContactoScalarWhereInput | ContactoScalarWhereInput[]
    OR?: ContactoScalarWhereInput[]
    NOT?: ContactoScalarWhereInput | ContactoScalarWhereInput[]
    id?: IntFilter<"Contacto"> | number
    direccion_correo?: StringFilter<"Contacto"> | string
    nombre?: StringFilter<"Contacto"> | string
    usuario_id?: IntFilter<"Contacto"> | number
  }

  export type UsuarioCreateWithoutCorreos_enviadosInput = {
    direccion_correo: string
    descripcion?: string | null
    nombre?: string | null
    clave?: string | null
    correos_recibidos?: CorreoCreateNestedManyWithoutDestinatarioInput
    direcciones_favoritas?: Direccion_FavoritaCreateNestedManyWithoutUsuarioInput
    correos_bloqueados?: Correo_BloqueadoCreateNestedManyWithoutUsuarioInput
    contactos?: ContactoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutCorreos_enviadosInput = {
    id_usuario?: number
    direccion_correo: string
    descripcion?: string | null
    nombre?: string | null
    clave?: string | null
    correos_recibidos?: CorreoUncheckedCreateNestedManyWithoutDestinatarioInput
    direcciones_favoritas?: Direccion_FavoritaUncheckedCreateNestedManyWithoutUsuarioInput
    correos_bloqueados?: Correo_BloqueadoUncheckedCreateNestedManyWithoutUsuarioInput
    contactos?: ContactoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutCorreos_enviadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCorreos_enviadosInput, UsuarioUncheckedCreateWithoutCorreos_enviadosInput>
  }

  export type UsuarioCreateWithoutCorreos_recibidosInput = {
    direccion_correo: string
    descripcion?: string | null
    nombre?: string | null
    clave?: string | null
    correos_enviados?: CorreoCreateNestedManyWithoutRemitenteInput
    direcciones_favoritas?: Direccion_FavoritaCreateNestedManyWithoutUsuarioInput
    correos_bloqueados?: Correo_BloqueadoCreateNestedManyWithoutUsuarioInput
    contactos?: ContactoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutCorreos_recibidosInput = {
    id_usuario?: number
    direccion_correo: string
    descripcion?: string | null
    nombre?: string | null
    clave?: string | null
    correos_enviados?: CorreoUncheckedCreateNestedManyWithoutRemitenteInput
    direcciones_favoritas?: Direccion_FavoritaUncheckedCreateNestedManyWithoutUsuarioInput
    correos_bloqueados?: Correo_BloqueadoUncheckedCreateNestedManyWithoutUsuarioInput
    contactos?: ContactoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutCorreos_recibidosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCorreos_recibidosInput, UsuarioUncheckedCreateWithoutCorreos_recibidosInput>
  }

  export type UsuarioUpsertWithoutCorreos_enviadosInput = {
    update: XOR<UsuarioUpdateWithoutCorreos_enviadosInput, UsuarioUncheckedUpdateWithoutCorreos_enviadosInput>
    create: XOR<UsuarioCreateWithoutCorreos_enviadosInput, UsuarioUncheckedCreateWithoutCorreos_enviadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCorreos_enviadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCorreos_enviadosInput, UsuarioUncheckedUpdateWithoutCorreos_enviadosInput>
  }

  export type UsuarioUpdateWithoutCorreos_enviadosInput = {
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    correos_recibidos?: CorreoUpdateManyWithoutDestinatarioNestedInput
    direcciones_favoritas?: Direccion_FavoritaUpdateManyWithoutUsuarioNestedInput
    correos_bloqueados?: Correo_BloqueadoUpdateManyWithoutUsuarioNestedInput
    contactos?: ContactoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCorreos_enviadosInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    correos_recibidos?: CorreoUncheckedUpdateManyWithoutDestinatarioNestedInput
    direcciones_favoritas?: Direccion_FavoritaUncheckedUpdateManyWithoutUsuarioNestedInput
    correos_bloqueados?: Correo_BloqueadoUncheckedUpdateManyWithoutUsuarioNestedInput
    contactos?: ContactoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUpsertWithoutCorreos_recibidosInput = {
    update: XOR<UsuarioUpdateWithoutCorreos_recibidosInput, UsuarioUncheckedUpdateWithoutCorreos_recibidosInput>
    create: XOR<UsuarioCreateWithoutCorreos_recibidosInput, UsuarioUncheckedCreateWithoutCorreos_recibidosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCorreos_recibidosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCorreos_recibidosInput, UsuarioUncheckedUpdateWithoutCorreos_recibidosInput>
  }

  export type UsuarioUpdateWithoutCorreos_recibidosInput = {
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    correos_enviados?: CorreoUpdateManyWithoutRemitenteNestedInput
    direcciones_favoritas?: Direccion_FavoritaUpdateManyWithoutUsuarioNestedInput
    correos_bloqueados?: Correo_BloqueadoUpdateManyWithoutUsuarioNestedInput
    contactos?: ContactoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCorreos_recibidosInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    correos_enviados?: CorreoUncheckedUpdateManyWithoutRemitenteNestedInput
    direcciones_favoritas?: Direccion_FavoritaUncheckedUpdateManyWithoutUsuarioNestedInput
    correos_bloqueados?: Correo_BloqueadoUncheckedUpdateManyWithoutUsuarioNestedInput
    contactos?: ContactoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateWithoutDirecciones_favoritasInput = {
    direccion_correo: string
    descripcion?: string | null
    nombre?: string | null
    clave?: string | null
    correos_enviados?: CorreoCreateNestedManyWithoutRemitenteInput
    correos_recibidos?: CorreoCreateNestedManyWithoutDestinatarioInput
    correos_bloqueados?: Correo_BloqueadoCreateNestedManyWithoutUsuarioInput
    contactos?: ContactoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutDirecciones_favoritasInput = {
    id_usuario?: number
    direccion_correo: string
    descripcion?: string | null
    nombre?: string | null
    clave?: string | null
    correos_enviados?: CorreoUncheckedCreateNestedManyWithoutRemitenteInput
    correos_recibidos?: CorreoUncheckedCreateNestedManyWithoutDestinatarioInput
    correos_bloqueados?: Correo_BloqueadoUncheckedCreateNestedManyWithoutUsuarioInput
    contactos?: ContactoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutDirecciones_favoritasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutDirecciones_favoritasInput, UsuarioUncheckedCreateWithoutDirecciones_favoritasInput>
  }

  export type UsuarioUpsertWithoutDirecciones_favoritasInput = {
    update: XOR<UsuarioUpdateWithoutDirecciones_favoritasInput, UsuarioUncheckedUpdateWithoutDirecciones_favoritasInput>
    create: XOR<UsuarioCreateWithoutDirecciones_favoritasInput, UsuarioUncheckedCreateWithoutDirecciones_favoritasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutDirecciones_favoritasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutDirecciones_favoritasInput, UsuarioUncheckedUpdateWithoutDirecciones_favoritasInput>
  }

  export type UsuarioUpdateWithoutDirecciones_favoritasInput = {
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    correos_enviados?: CorreoUpdateManyWithoutRemitenteNestedInput
    correos_recibidos?: CorreoUpdateManyWithoutDestinatarioNestedInput
    correos_bloqueados?: Correo_BloqueadoUpdateManyWithoutUsuarioNestedInput
    contactos?: ContactoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutDirecciones_favoritasInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    correos_enviados?: CorreoUncheckedUpdateManyWithoutRemitenteNestedInput
    correos_recibidos?: CorreoUncheckedUpdateManyWithoutDestinatarioNestedInput
    correos_bloqueados?: Correo_BloqueadoUncheckedUpdateManyWithoutUsuarioNestedInput
    contactos?: ContactoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateWithoutContactosInput = {
    direccion_correo: string
    descripcion?: string | null
    nombre?: string | null
    clave?: string | null
    correos_enviados?: CorreoCreateNestedManyWithoutRemitenteInput
    correos_recibidos?: CorreoCreateNestedManyWithoutDestinatarioInput
    direcciones_favoritas?: Direccion_FavoritaCreateNestedManyWithoutUsuarioInput
    correos_bloqueados?: Correo_BloqueadoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutContactosInput = {
    id_usuario?: number
    direccion_correo: string
    descripcion?: string | null
    nombre?: string | null
    clave?: string | null
    correos_enviados?: CorreoUncheckedCreateNestedManyWithoutRemitenteInput
    correos_recibidos?: CorreoUncheckedCreateNestedManyWithoutDestinatarioInput
    direcciones_favoritas?: Direccion_FavoritaUncheckedCreateNestedManyWithoutUsuarioInput
    correos_bloqueados?: Correo_BloqueadoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutContactosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutContactosInput, UsuarioUncheckedCreateWithoutContactosInput>
  }

  export type UsuarioUpsertWithoutContactosInput = {
    update: XOR<UsuarioUpdateWithoutContactosInput, UsuarioUncheckedUpdateWithoutContactosInput>
    create: XOR<UsuarioCreateWithoutContactosInput, UsuarioUncheckedCreateWithoutContactosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutContactosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutContactosInput, UsuarioUncheckedUpdateWithoutContactosInput>
  }

  export type UsuarioUpdateWithoutContactosInput = {
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    correos_enviados?: CorreoUpdateManyWithoutRemitenteNestedInput
    correos_recibidos?: CorreoUpdateManyWithoutDestinatarioNestedInput
    direcciones_favoritas?: Direccion_FavoritaUpdateManyWithoutUsuarioNestedInput
    correos_bloqueados?: Correo_BloqueadoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutContactosInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    correos_enviados?: CorreoUncheckedUpdateManyWithoutRemitenteNestedInput
    correos_recibidos?: CorreoUncheckedUpdateManyWithoutDestinatarioNestedInput
    direcciones_favoritas?: Direccion_FavoritaUncheckedUpdateManyWithoutUsuarioNestedInput
    correos_bloqueados?: Correo_BloqueadoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateWithoutCorreos_bloqueadosInput = {
    direccion_correo: string
    descripcion?: string | null
    nombre?: string | null
    clave?: string | null
    correos_enviados?: CorreoCreateNestedManyWithoutRemitenteInput
    correos_recibidos?: CorreoCreateNestedManyWithoutDestinatarioInput
    direcciones_favoritas?: Direccion_FavoritaCreateNestedManyWithoutUsuarioInput
    contactos?: ContactoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutCorreos_bloqueadosInput = {
    id_usuario?: number
    direccion_correo: string
    descripcion?: string | null
    nombre?: string | null
    clave?: string | null
    correos_enviados?: CorreoUncheckedCreateNestedManyWithoutRemitenteInput
    correos_recibidos?: CorreoUncheckedCreateNestedManyWithoutDestinatarioInput
    direcciones_favoritas?: Direccion_FavoritaUncheckedCreateNestedManyWithoutUsuarioInput
    contactos?: ContactoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutCorreos_bloqueadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCorreos_bloqueadosInput, UsuarioUncheckedCreateWithoutCorreos_bloqueadosInput>
  }

  export type UsuarioUpsertWithoutCorreos_bloqueadosInput = {
    update: XOR<UsuarioUpdateWithoutCorreos_bloqueadosInput, UsuarioUncheckedUpdateWithoutCorreos_bloqueadosInput>
    create: XOR<UsuarioCreateWithoutCorreos_bloqueadosInput, UsuarioUncheckedCreateWithoutCorreos_bloqueadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCorreos_bloqueadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCorreos_bloqueadosInput, UsuarioUncheckedUpdateWithoutCorreos_bloqueadosInput>
  }

  export type UsuarioUpdateWithoutCorreos_bloqueadosInput = {
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    correos_enviados?: CorreoUpdateManyWithoutRemitenteNestedInput
    correos_recibidos?: CorreoUpdateManyWithoutDestinatarioNestedInput
    direcciones_favoritas?: Direccion_FavoritaUpdateManyWithoutUsuarioNestedInput
    contactos?: ContactoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCorreos_bloqueadosInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    direccion_correo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    correos_enviados?: CorreoUncheckedUpdateManyWithoutRemitenteNestedInput
    correos_recibidos?: CorreoUncheckedUpdateManyWithoutDestinatarioNestedInput
    direcciones_favoritas?: Direccion_FavoritaUncheckedUpdateManyWithoutUsuarioNestedInput
    contactos?: ContactoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CorreoCreateManyRemitenteInput = {
    correo_id?: number
    destinatario_id: number
    asunto?: string | null
    cuerpo?: string | null
    es_favorito?: boolean | null
  }

  export type CorreoCreateManyDestinatarioInput = {
    correo_id?: number
    remitente_id: number
    asunto?: string | null
    cuerpo?: string | null
    es_favorito?: boolean | null
  }

  export type Direccion_FavoritaCreateManyUsuarioInput = {
    id_direccion?: number
  }

  export type Correo_BloqueadoCreateManyUsuarioInput = {
    correo_bloqueado_id?: number
  }

  export type ContactoCreateManyUsuarioInput = {
    id?: number
    direccion_correo: string
    nombre: string
  }

  export type CorreoUpdateWithoutRemitenteInput = {
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    es_favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    destinatario?: UsuarioUpdateOneRequiredWithoutCorreos_recibidosNestedInput
  }

  export type CorreoUncheckedUpdateWithoutRemitenteInput = {
    correo_id?: IntFieldUpdateOperationsInput | number
    destinatario_id?: IntFieldUpdateOperationsInput | number
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    es_favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type CorreoUncheckedUpdateManyWithoutRemitenteInput = {
    correo_id?: IntFieldUpdateOperationsInput | number
    destinatario_id?: IntFieldUpdateOperationsInput | number
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    es_favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type CorreoUpdateWithoutDestinatarioInput = {
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    es_favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    remitente?: UsuarioUpdateOneRequiredWithoutCorreos_enviadosNestedInput
  }

  export type CorreoUncheckedUpdateWithoutDestinatarioInput = {
    correo_id?: IntFieldUpdateOperationsInput | number
    remitente_id?: IntFieldUpdateOperationsInput | number
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    es_favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type CorreoUncheckedUpdateManyWithoutDestinatarioInput = {
    correo_id?: IntFieldUpdateOperationsInput | number
    remitente_id?: IntFieldUpdateOperationsInput | number
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    es_favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Direccion_FavoritaUpdateWithoutUsuarioInput = {

  }

  export type Direccion_FavoritaUncheckedUpdateWithoutUsuarioInput = {
    id_direccion?: IntFieldUpdateOperationsInput | number
  }

  export type Direccion_FavoritaUncheckedUpdateManyWithoutUsuarioInput = {
    id_direccion?: IntFieldUpdateOperationsInput | number
  }

  export type Correo_BloqueadoUpdateWithoutUsuarioInput = {

  }

  export type Correo_BloqueadoUncheckedUpdateWithoutUsuarioInput = {
    correo_bloqueado_id?: IntFieldUpdateOperationsInput | number
  }

  export type Correo_BloqueadoUncheckedUpdateManyWithoutUsuarioInput = {
    correo_bloqueado_id?: IntFieldUpdateOperationsInput | number
  }

  export type ContactoUpdateWithoutUsuarioInput = {
    direccion_correo?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ContactoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    direccion_correo?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ContactoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    direccion_correo?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UsuarioCountOutputTypeDefaultArgs instead
     */
    export type UsuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioDefaultArgs instead
     */
    export type UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CorreoDefaultArgs instead
     */
    export type CorreoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CorreoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Direccion_FavoritaDefaultArgs instead
     */
    export type Direccion_FavoritaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Direccion_FavoritaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ContactoDefaultArgs instead
     */
    export type ContactoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ContactoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Correo_BloqueadoDefaultArgs instead
     */
    export type Correo_BloqueadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Correo_BloqueadoDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}