// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//------------------------------TABLAS

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id_usuario            Int                  @id @default(autoincrement())
  direccion_correo      String
  descripcion           String?
  nombre                String?
  clave                 String?
  correos_enviados      Correo[]             @relation("remitente")
  correos_recibidos     Correo[]             @relation("destinatario")
  direcciones_favoritas Direccion_Favorita[]
  correos_bloqueados    Correo_Bloqueado[]
}

model Correo {
  correo_id       Int      @id @default(autoincrement())
  remitente_id    Int
  destinatario_id Int
  asunto          String?
  cuerpo          String?
  es_favorito     Boolean?
  remitente       Usuario  @relation("remitente", fields: [remitente_id], references: [id_usuario])
  destinatario    Usuario  @relation("destinatario", fields: [destinatario_id], references: [id_usuario])
}

model Direccion_Favorita {
  id_direccion Int     @id @default(autoincrement())
  usuario_id   Int
  usuario      Usuario @relation(fields: [usuario_id], references: [id_usuario])
}

model Contacto {
  id               Int     @id @default(autoincrement())
  direccion_correo String
  nombre           String?
}

model Correo_Bloqueado {
  correo_bloqueado_id Int @id @default(autoincrement())
  usuario_id          Int

  usuario Usuario @relation(fields: [usuario_id], references: [id_usuario])
}
